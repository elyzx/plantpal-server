{"version":3,"sources":["components/Nav.jsx","animation/LottieControl.jsx","components/LandingPage.jsx","components/auth/Signup.jsx","components/auth/Login.jsx","components/auth/Profile.jsx","components/reminders/RemindersToDo.jsx","components/Dashboard.jsx","components/plants/MyPlants.jsx","components/plants/AddPlant.jsx","components/plants/PlantDetails.jsx","components/plants/EditPlant.jsx","components/reminders/Reminders.jsx","components/Page404.jsx","config.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Nav","props","onLogOut","isLoggedIn","user","classes","drawerClasses","list","width","React","useState","anchorEl","setAnchorEl","drawerOpen","toggleDrawer","open","Boolean","drawerIsOpen","iOS","process","browser","test","navigator","userAgent","useEffect","handleClose","onLogoutAndClose","className","position","appBar","edge","color","onClick","variant","component","RouterLink","to","disableBackdropTransition","disableDiscovery","anchor","onClose","onOpen","button","style","blue","green","_id","username","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","LottieControl","height","defaultOptions","loop","autoplay","animationData","animation","rendererSettings","preserveAspectRatio","options","LandingPage","Container","Grid","container","item","xs","sm","Link","Button","plantGrows","Signup","onSignUp","myError","space","marginTop","onSubmit","htmlFor","type","name","placeholder","required","padding","border","borderColor","cursor","marginBottom","value","background","borderRadius","Login","onLogIn","console","log","Profile","onEdit","onDeleteUser","profileDetails","setProfileDetails","handleChangeDetails","target","setOpen","onChange","email","postal","country","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","RemindersToDo","reminders","onWatering","month","day","page","setPage","dense","rowsPerPage","setRowsPerPage","incompleteReminders","filter","reminder","complete","emptyRows","Math","min","length","TableContainer","Paper","Table","table","TableHead","TableRow","TableCell","align","TableBody","slice","map","i","scope","plant","Intl","DateTimeFormat","format","nextWatering","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","fontSize","paper","textAlign","paperGreen","backgroundColor","paperGreenWithoutHeight","paperBlue","paperBlueWithoutHeight","minHeight","paperYellow","paperYellowWithoutHeight","paperRed","gallery","display","flexWrap","justifyContent","overflow","image","objectFit","Dashboard","plants","weather","temper","arrPlantsDead","plantTotal","arrPlantsAlive","isAlive","plantsAlive","completedReminders","plantsDead","plantJson","ImageList","cols","ImageListItem","src","photo","alt","img","MyPlants","onSearch","useTheme","maxWidth","search","minWidth","card","margin","media","Card","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","v","CardActions","size","AddPlant","onAddPlant","action","encType","maxlength","max","accept","PlantDetails","plantId","match","params","find","p","nextReminderDate","undefined","nextWateringReminder","r","waterFreq","description","EditPlant","plantDetail","updatePlantDetail","for","selected","onDelete","subtitle","Reminders","completeReminders","wateredAt","bigPlant","Page404","errorJson","createTheme","palette","primary","main","dark","secondary","contrastThreshold","tonalOffset","withRouter","setUser","setIsLoggedIn","updatePlants","filteredPlants","updateFilteredPlants","setReminders","fetchingUser","updateFetchingUser","signupError","updateSignupError","loginError","updateLoginError","updateTempr","fetchUser","fetchPlants","fetchFilterPlants","fetchReminders","handleWeather","a","axios","get","config","withCredentials","response","data","temp","history","push","handleDatesInReminders","Date","parse","handleSignUp","preventDefault","password","newUser","post","errorMessage","handleLogIn","myUser","error","handleLogOut","handleEditProfile","patch","then","catch","err","handleDeleteUser","delete","handleAddPlant","formData","FormData","append","files","imgResponse","newPlant","handleDeletePlant","handleEditPlant","fp","handleSearch","searchPlant","toLowerCase","includes","handleReminder","reminderId","ThemeProvider","exact","path","render","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b78c5ec.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport {Link as RouterLink} from  'react-router-dom';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Link from '@material-ui/core/Link';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport { green, blue } from '@material-ui/core/colors';\n\n// Icons\nimport LocalFloristSharpIcon from '@material-ui/icons/LocalFloristSharp';\nimport FormatListBulletedSharpIcon from '@material-ui/icons/FormatListBulletedSharp';\nimport BarChartSharpIcon from '@material-ui/icons/BarChartSharp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n}));\n\n\nfunction Nav(props) {\n    const {onLogOut, isLoggedIn, user} = props\n    const classes = useStyles();\n    const drawerClasses = makeStyles({\n        list: {\n            width: 250,\n        },\n    })\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [drawerOpen, toggleDrawer] = React.useState(false);\n    const open = Boolean(anchorEl);\n    const drawerIsOpen = Boolean(drawerOpen);\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  \n    useEffect(() => {\n        return () => {\n            toggleDrawer(false)\n        }\n    }, [])\n\n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const onLogoutAndClose = () => {\n        handleClose()\n        onLogOut()\n    }\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    { user && (\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                            onClick={() => isLoggedIn && toggleDrawer(true)}>\n                            <MenuIcon />\n                        </IconButton>\n                    )}\n                <Typography variant=\"h6\" className={classes.title}>\n                    <Link component={RouterLink} to='/' color='inherit'>PlantPal</Link>\n                </Typography>\n\n                {\n                    user && (\n                        <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n                            anchor={'left'}\n                            open={drawerIsOpen}\n                            onClose={() => toggleDrawer(false)}\n                            onOpen={() => toggleDrawer(true)}>\n                            <div className={drawerClasses.list}>\n                                <List></List>\n                                <List>\n                                    <ListItem button component={RouterLink} to='/'>\n                                        <ListItemIcon><HomeIcon style={{ color: blue[500]}}/> </ListItemIcon>\n                                        <ListItemText>PlantPal</ListItemText>\n                                    </ListItem>\n                                </List>\n                                <List>\n                                    <Divider />\n                                </List>\n                                <List>\n                                    <ListItem button component={RouterLink} to='/dashboard'>\n                                        <ListItemIcon><BarChartSharpIcon style={{ color: green[500]}} /> </ListItemIcon>\n                                        <ListItemText>Dashboard</ListItemText>\n                                    </ListItem>\n                                    <ListItem button component={RouterLink} to='/plants'>\n                                        <ListItemIcon><LocalFloristSharpIcon style={{ color: green[500]}}/> </ListItemIcon>\n                                        <ListItemText>Plants</ListItemText>\n                                    </ListItem>\n                                    <ListItem button component={RouterLink} to='/reminders'>\n                                        <ListItemIcon><FormatListBulletedSharpIcon style={{ color: green[500]}} /> </ListItemIcon>\n                                        <ListItemText>Reminders</ListItemText>\n                                    </ListItem>\n                                </List>\n                                <List>\n                                    <Divider />\n                                </List>\n                                <List>\n                                    <ListItem button component={RouterLink} to={`/profile/${user._id}`}>\n                                        <ListItemIcon><AccountCircle style={{ color: blue[500]}}/> </ListItemIcon>\n                                        <ListItemText> {user.username} </ListItemText>\n                                    </ListItem>\n                                    <ListItem button onClick={onLogoutAndClose}>\n                                        <ListItemIcon><ExitToAppIcon style={{ color: blue[500]}}/> </ListItemIcon>\n                                        <ListItemText>Sign out</ListItemText>\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </SwipeableDrawer>\n                    )\n                }\n                {isLoggedIn ? (\n                    <div>\n                    <IconButton\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\"\n                    >\n                        <AccountCircle />\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                    {\n                        user && (\n                            <MenuItem button component={RouterLink} to={`/profile/${user._id}`} onClick={handleClose}>Profile</MenuItem>\n                        )\n                    }\n                        <MenuItem onClick={onLogoutAndClose}>Sign out</MenuItem>\n                    </Menu>\n                    </div>\n                )\n                : ( \n                    <div>\n                        <Link button component={RouterLink} to='/login' color='inherit'><Button>Login</Button></Link>\n                        <Link button component={RouterLink} to='/signup' color='inherit'><Button>Signup</Button></Link>\n                    </div>\n                )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Nav;","import React from  'react'\nimport Lottie from  'react-lottie';\n\nfunction LottieControl(props) {\n\n\tconst { height, width, animation } = props\n\t\n\tconst defaultOptions = {\n\t\tloop: true,\n\t\tautoplay: true,\n\t\tanimationData: animation,\n\t\trendererSettings: {\n\t\t\tpreserveAspectRatio: 'xMidYMid slice'\n\t\t}\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Lottie  \n\t\t\t\toptions={defaultOptions}  \n\t\t\t\theight={height}  \n\t\t\t\twidth={width }\n\t\t\t/>\n\t\t</div>\n\t)\n}\nexport default LottieControl","import React from 'react';\nimport {Link as RouterLink} from  'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\n// Animation\nimport LottieControl from '../animation/LottieControl.jsx'\nimport plantGrows from '../animation/plantGrows.json';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n  }));\n\nfunction LandingPage(props) {\n    const {user} = props\n    const classes = useStyles();\n\n    return (\n        <Container className='align-center padded'>\n              <Grid container spacing={3} className='padded'>\n                <Grid item xs={12} sm={6}>\n                    \n                      <h1>🌱 Your plant's hydration pal</h1>\n                      <p>Keep track of all your plant’s watering schedule with PlantPal.</p>\n                      <h4>To get started:</h4>\n                        <p>🪴 Create an account and add your plants</p>\n                        <p>📅 Define how often they need watering</p>\n                        <p>📊 View your stats in the dashboard</p>\n                        <p>💧 Stick to your watering schedule</p>\n                        <p>✅ Tick off reminders to create the next</p>\n                        <p>💀 Update the health status of each plant</p>\n                      <div className='flex-box padded'>\n                          {!user && (\n                            <>\n                              <Link button component={RouterLink} to='/login' color='inherit'><Button className='padded'>Login</Button></Link>\n                              <Link button component={RouterLink} to='/signup' color='inherit'><Button className='padded'>Signup</Button></Link>\n                            </>\n                          )}\n                      </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <LottieControl animation={plantGrows} />\n                </Grid>\n            </Grid>\n        </ Container>\n    );\n};\n\nexport default LandingPage;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction Signup(props) {\n    const {onSignUp, isLoggedIn, myError} = props\n\n    const style = {\n        background: 'linear-gradient(45deg, #C8FACC 30%, #FFF6CE 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'black',\n        height: 40,\n        padding: '0 30px',\n        marginTop: '20px',\n      };\n\n      const space = {\n        marginTop: '1vw',\n    }\n\n    const selectForm = {\n        padding: '8px 16px',\n        border: '1px solid transparent',\n        borderColor: 'transparent transparent rgba(0, 0, 0, 0.1) transparent',\n        cursor: 'pointer',\n        marginBottom: '1vw'\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to={'/dashboard'} />\n    }\n    return (\n        <Container>\n            <div className='flex-box'> \n                <h1>Create an account</h1>\n            </div>\n            <div className='flex-box'> \n                <form onSubmit={onSignUp}>\n                    <div  style={space} className=\"form-group\">\n                        <label htmlFor=\"InputName\">Name</label>\n                        <input style={space} type=\"text\" className=\"form-control\" id=\"InputName\" name=\"name\" placeholder=\"Enter your name\" required/>\n                    </div>\n                    <div style={space} className=\"form-group\">\n                        <label htmlFor=\"InputUsername\">Username</label>\n                        <input style={space} type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\" placeholder=\"Create a case-sensitive username\" required/>\n                    </div>\n\n                    <div style={space} className=\"form-group\">\n                        <label style={space} htmlFor=\"InputEmail\">Email address</label>\n                        <input style={space} type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" placeholder=\"Enter your email address\" required/>\n                    </div>\n                    <div style={space} className=\"form-group\">\n                        <label htmlFor=\"InputPassword\">Password</label>\n                        <input style={space} name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Create a password\" required/>\n                    </div>\n\n                    <div className='yellowBg'>\n                        <label style={space}>☀️ Optional ☀️</label>\n                        <br></br>\n                        <label style={space}>Enter your location to see the weather forecast in your area</label>\n                    </div>\n                        <div style={space} className=\"form-group\">\n                            <label style={space} htmlFor=\"InputUsername\">Post Code</label>\n                            <input style={space} type=\"text\" className=\"form-control\" id=\"InputPostal\" name=\"postal\" placeholder=\"Enter your post code\"/>\n                        </div>\n                        <div>\n                            <label style={space} htmlFor=\"InputUsername\">Country</label>\n                            <select style={selectForm} className=\"form-control\"  id=\"InputCountry\" name=\"country\">\n                                <option >Select from dropdown</option>\n                                        <option value=\"AF\">Afghanistan</option>\n                                        <option value=\"AX\">Aland Islands</option>\n                                        <option value=\"AL\">Albania</option>\n                                        <option value=\"DZ\">Algeria</option>\n                                        <option value=\"AS\">American Samoa</option>\n                                        <option value=\"AD\">Andorra</option>\n                                        <option value=\"AO\">Angola</option>\n                                        <option value=\"AI\">Anguilla</option>\n                                        <option value=\"AQ\">Antarctica</option>\n                                        <option value=\"AG\">Antigua and Barbuda</option>\n                                        <option value=\"AR\">Argentina</option>\n                                        <option value=\"AM\">Armenia</option>\n                                        <option value=\"AW\">Aruba</option>\n                                        <option value=\"AU\">Australia</option>\n                                        <option value=\"AT\">Austria</option>\n                                        <option value=\"AZ\">Azerbaijan</option>\n                                        <option value=\"BS\">Bahamas</option>\n                                        <option value=\"BH\">Bahrain</option>\n                                        <option value=\"BD\">Bangladesh</option>\n                                        <option value=\"BB\">Barbados</option>\n                                        <option value=\"BY\">Belarus</option>\n                                        <option value=\"BE\">Belgium</option>\n                                        <option value=\"BZ\">Belize</option>\n                                        <option value=\"BJ\">Benin</option>\n                                        <option value=\"BM\">Bermuda</option>\n                                        <option value=\"BT\">Bhutan</option>\n                                        <option value=\"BO\">Bolivia</option>\n                                        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n                                        <option value=\"BA\">Bosnia and Herzegovina</option>\n                                        <option value=\"BW\">Botswana</option>\n                                        <option value=\"BV\">Bouvet Island</option>\n                                        <option value=\"BR\">Brazil</option>\n                                        <option value=\"IO\">British Indian Ocean Territory</option>\n                                        <option value=\"BN\">Brunei Darussalam</option>\n                                        <option value=\"BG\">Bulgaria</option>\n                                        <option value=\"BF\">Burkina Faso</option>\n                                        <option value=\"BI\">Burundi</option>\n                                        <option value=\"KH\">Cambodia</option>\n                                        <option value=\"CM\">Cameroon</option>\n                                        <option value=\"CA\">Canada</option>\n                                        <option value=\"CV\">Cape Verde</option>\n                                        <option value=\"KY\">Cayman Islands</option>\n                                        <option value=\"CF\">Central African Republic</option>\n                                        <option value=\"TD\">Chad</option>\n                                        <option value=\"CL\">Chile</option>\n                                        <option value=\"CN\">China</option>\n                                        <option value=\"CX\">Christmas Island</option>\n                                        <option value=\"CC\">Cocos (Keeling) Islands</option>\n                                        <option value=\"CO\">Colombia</option>\n                                        <option value=\"KM\">Comoros</option>\n                                        <option value=\"CG\">Congo</option>\n                                        <option value=\"CD\">Congo, Democratic Republic of the Congo</option>\n                                        <option value=\"CK\">Cook Islands</option>\n                                        <option value=\"CR\">Costa Rica</option>\n                                        <option value=\"CI\">Cote D'Ivoire</option>\n                                        <option value=\"HR\">Croatia</option>\n                                        <option value=\"CU\">Cuba</option>\n                                        <option value=\"CW\">Curacao</option>\n                                        <option value=\"CY\">Cyprus</option>\n                                        <option value=\"CZ\">Czech Republic</option>\n                                        <option value=\"DK\">Denmark</option>\n                                        <option value=\"DJ\">Djibouti</option>\n                                        <option value=\"DM\">Dominica</option>\n                                        <option value=\"DO\">Dominican Republic</option>\n                                        <option value=\"EC\">Ecuador</option>\n                                        <option value=\"EG\">Egypt</option>\n                                        <option value=\"SV\">El Salvador</option>\n                                        <option value=\"GQ\">Equatorial Guinea</option>\n                                        <option value=\"ER\">Eritrea</option>\n                                        <option value=\"EE\">Estonia</option>\n                                        <option value=\"ET\">Ethiopia</option>\n                                        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n                                        <option value=\"FO\">Faroe Islands</option>\n                                        <option value=\"FJ\">Fiji</option>\n                                        <option value=\"FI\">Finland</option>\n                                        <option value=\"FR\">France</option>\n                                        <option value=\"GF\">French Guiana</option>\n                                        <option value=\"PF\">French Polynesia</option>\n                                        <option value=\"TF\">French Southern Territories</option>\n                                        <option value=\"GA\">Gabon</option>\n                                        <option value=\"GM\">Gambia</option>\n                                        <option value=\"GE\">Georgia</option>\n                                        <option value=\"DE\">Germany</option>\n                                        <option value=\"GH\">Ghana</option>\n                                        <option value=\"GI\">Gibraltar</option>\n                                        <option value=\"GR\">Greece</option>\n                                        <option value=\"GL\">Greenland</option>\n                                        <option value=\"GD\">Grenada</option>\n                                        <option value=\"GP\">Guadeloupe</option>\n                                        <option value=\"GU\">Guam</option>\n                                        <option value=\"GT\">Guatemala</option>\n                                        <option value=\"GG\">Guernsey</option>\n                                        <option value=\"GN\">Guinea</option>\n                                        <option value=\"GW\">Guinea-Bissau</option>\n                                        <option value=\"GY\">Guyana</option>\n                                        <option value=\"HT\">Haiti</option>\n                                        <option value=\"HM\">Heard Island and Mcdonald Islands</option>\n                                        <option value=\"VA\">Holy See (Vatican City State)</option>\n                                        <option value=\"HN\">Honduras</option>\n                                        <option value=\"HK\">Hong Kong</option>\n                                        <option value=\"HU\">Hungary</option>\n                                        <option value=\"IS\">Iceland</option>\n                                        <option value=\"IN\">India</option>\n                                        <option value=\"ID\">Indonesia</option>\n                                        <option value=\"IR\">Iran, Islamic Republic of</option>\n                                        <option value=\"IQ\">Iraq</option>\n                                        <option value=\"IE\">Ireland</option>\n                                        <option value=\"IM\">Isle of Man</option>\n                                        <option value=\"IL\">Israel</option>\n                                        <option value=\"IT\">Italy</option>\n                                        <option value=\"JM\">Jamaica</option>\n                                        <option value=\"JP\">Japan</option>\n                                        <option value=\"JE\">Jersey</option>\n                                        <option value=\"JO\">Jordan</option>\n                                        <option value=\"KZ\">Kazakhstan</option>\n                                        <option value=\"KE\">Kenya</option>\n                                        <option value=\"KI\">Kiribati</option>\n                                        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n                                        <option value=\"KR\">Korea, Republic of</option>\n                                        <option value=\"XK\">Kosovo</option>\n                                        <option value=\"KW\">Kuwait</option>\n                                        <option value=\"KG\">Kyrgyzstan</option>\n                                        <option value=\"LA\">Lao People's Democratic Republic</option>\n                                        <option value=\"LV\">Latvia</option>\n                                        <option value=\"LB\">Lebanon</option>\n                                        <option value=\"LS\">Lesotho</option>\n                                        <option value=\"LR\">Liberia</option>\n                                        <option value=\"LY\">Libyan Arab Jamahiriya</option>\n                                        <option value=\"LI\">Liechtenstein</option>\n                                        <option value=\"LT\">Lithuania</option>\n                                        <option value=\"LU\">Luxembourg</option>\n                                        <option value=\"MO\">Macao</option>\n                                        <option value=\"MK\">Macedonia, the Former Yugoslav Republic of</option>\n                                        <option value=\"MG\">Madagascar</option>\n                                        <option value=\"MW\">Malawi</option>\n                                        <option value=\"MY\">Malaysia</option>\n                                        <option value=\"MV\">Maldives</option>\n                                        <option value=\"ML\">Mali</option>\n                                        <option value=\"MT\">Malta</option>\n                                        <option value=\"MH\">Marshall Islands</option>\n                                        <option value=\"MQ\">Martinique</option>\n                                        <option value=\"MR\">Mauritania</option>\n                                        <option value=\"MU\">Mauritius</option>\n                                        <option value=\"YT\">Mayotte</option>\n                                        <option value=\"MX\">Mexico</option>\n                                        <option value=\"FM\">Micronesia, Federated States of</option>\n                                        <option value=\"MD\">Moldova, Republic of</option>\n                                        <option value=\"MC\">Monaco</option>\n                                        <option value=\"MN\">Mongolia</option>\n                                        <option value=\"ME\">Montenegro</option>\n                                        <option value=\"MS\">Montserrat</option>\n                                        <option value=\"MA\">Morocco</option>\n                                        <option value=\"MZ\">Mozambique</option>\n                                        <option value=\"MM\">Myanmar</option>\n                                        <option value=\"NA\">Namibia</option>\n                                        <option value=\"NR\">Nauru</option>\n                                        <option value=\"NP\">Nepal</option>\n                                        <option value=\"NL\">Netherlands</option>\n                                        <option value=\"AN\">Netherlands Antilles</option>\n                                        <option value=\"NC\">New Caledonia</option>\n                                        <option value=\"NZ\">New Zealand</option>\n                                        <option value=\"NI\">Nicaragua</option>\n                                        <option value=\"NE\">Niger</option>\n                                        <option value=\"NG\">Nigeria</option>\n                                        <option value=\"NU\">Niue</option>\n                                        <option value=\"NF\">Norfolk Island</option>\n                                        <option value=\"MP\">Northern Mariana Islands</option>\n                                        <option value=\"NO\">Norway</option>\n                                        <option value=\"OM\">Oman</option>\n                                        <option value=\"PK\">Pakistan</option>\n                                        <option value=\"PW\">Palau</option>\n                                        <option value=\"PS\">Palestinian Territory, Occupied</option>\n                                        <option value=\"PA\">Panama</option>\n                                        <option value=\"PG\">Papua New Guinea</option>\n                                        <option value=\"PY\">Paraguay</option>\n                                        <option value=\"PE\">Peru</option>\n                                        <option value=\"PH\">Philippines</option>\n                                        <option value=\"PN\">Pitcairn</option>\n                                        <option value=\"PL\">Poland</option>\n                                        <option value=\"PT\">Portugal</option>\n                                        <option value=\"PR\">Puerto Rico</option>\n                                        <option value=\"QA\">Qatar</option>\n                                        <option value=\"RE\">Reunion</option>\n                                        <option value=\"RO\">Romania</option>\n                                        <option value=\"RU\">Russian Federation</option>\n                                        <option value=\"RW\">Rwanda</option>\n                                        <option value=\"BL\">Saint Barthelemy</option>\n                                        <option value=\"SH\">Saint Helena</option>\n                                        <option value=\"KN\">Saint Kitts and Nevis</option>\n                                        <option value=\"LC\">Saint Lucia</option>\n                                        <option value=\"MF\">Saint Martin</option>\n                                        <option value=\"PM\">Saint Pierre and Miquelon</option>\n                                        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n                                        <option value=\"WS\">Samoa</option>\n                                        <option value=\"SM\">San Marino</option>\n                                        <option value=\"ST\">Sao Tome and Principe</option>\n                                        <option value=\"SA\">Saudi Arabia</option>\n                                        <option value=\"SN\">Senegal</option>\n                                        <option value=\"RS\">Serbia</option>\n                                        <option value=\"CS\">Serbia and Montenegro</option>\n                                        <option value=\"SC\">Seychelles</option>\n                                        <option value=\"SL\">Sierra Leone</option>\n                                        <option value=\"SG\">Singapore</option>\n                                        <option value=\"SX\">Sint Maarten</option>\n                                        <option value=\"SK\">Slovakia</option>\n                                        <option value=\"SI\">Slovenia</option>\n                                        <option value=\"SB\">Solomon Islands</option>\n                                        <option value=\"SO\">Somalia</option>\n                                        <option value=\"ZA\">South Africa</option>\n                                        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n                                        <option value=\"SS\">South Sudan</option>\n                                        <option value=\"ES\">Spain</option>\n                                        <option value=\"LK\">Sri Lanka</option>\n                                        <option value=\"SD\">Sudan</option>\n                                        <option value=\"SR\">Suriname</option>\n                                        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n                                        <option value=\"SZ\">Swaziland</option>\n                                        <option value=\"SE\">Sweden</option>\n                                        <option value=\"CH\">Switzerland</option>\n                                        <option value=\"SY\">Syrian Arab Republic</option>\n                                        <option value=\"TW\">Taiwan, Province of China</option>\n                                        <option value=\"TJ\">Tajikistan</option>\n                                        <option value=\"TZ\">Tanzania, United Republic of</option>\n                                        <option value=\"TH\">Thailand</option>\n                                        <option value=\"TL\">Timor-Leste</option>\n                                        <option value=\"TG\">Togo</option>\n                                        <option value=\"TK\">Tokelau</option>\n                                        <option value=\"TO\">Tonga</option>\n                                        <option value=\"TT\">Trinidad and Tobago</option>\n                                        <option value=\"TN\">Tunisia</option>\n                                        <option value=\"TR\">Turkey</option>\n                                        <option value=\"TM\">Turkmenistan</option>\n                                        <option value=\"TC\">Turks and Caicos Islands</option>\n                                        <option value=\"TV\">Tuvalu</option>\n                                        <option value=\"UG\">Uganda</option>\n                                        <option value=\"UA\">Ukraine</option>\n                                        <option value=\"AE\">United Arab Emirates</option>\n                                        <option value=\"GB\">United Kingdom</option>\n                                        <option value=\"US\">United States</option>\n                                        <option value=\"UM\">United States Minor Outlying Islands</option>\n                                        <option value=\"UY\">Uruguay</option>\n                                        <option value=\"UZ\">Uzbekistan</option>\n                                        <option value=\"VU\">Vanuatu</option>\n                                        <option value=\"VE\">Venezuela</option>\n                                        <option value=\"VN\">Viet Nam</option>\n                                        <option value=\"VG\">Virgin Islands, British</option>\n                                        <option value=\"VI\">Virgin Islands, U.s.</option>\n                                        <option value=\"WF\">Wallis and Futuna</option>\n                                        <option value=\"EH\">Western Sahara</option>\n                                        <option value=\"YE\">Yemen</option>\n                                        <option value=\"ZM\">Zambia</option>\n                                        <option value=\"ZW\">Zimbabwe</option>\n                                </select>\n                        </div>\n                    <div className='flex-box'>\n                        <Button style={style} type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n                    </div>\n                    {\n                        myError ? (\n                             <p className='errorMsg'>{myError}</p>\n                        ) : ''\n                    }\n                </form>\n            </div>\n        </Container>\n    );\n};\n\nexport default Signup;\n\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction Login(props) {\n    const {onLogIn, isLoggedIn, myError} = props\n\n    const style = {\n        background: 'linear-gradient(45deg, #C8FACC 30%, #FFF6CE 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'black',\n        height: 40,\n        padding: '0 30px',\n        marginTop: '20px',\n      };\n\n    if (isLoggedIn) {\n        console.log(\"user is logged in; go back\")\n        return <Redirect to={'/dashboard'} />\n    }\n    \n    return (\n        <Container>\n            <div className='flex-box'>\n                <h1>Log in to PlantPal</h1>\n            </div>\n            <div className='flex-box'>\n                <form onSubmit={onLogIn}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputUsername\">Username</label>\n                        <input name=\"username\" type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"Enter your username\"/>\n                    </div>\n                    <div>  </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputPassword\">Password</label>\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter your password\" />\n                    </div>\n                    <div className='flex-box'>\n                        <Button style={style} type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n                    </div>\n                    {\n                        myError ? (\n                             <p className='errorMsg'>{myError}</p>\n                        ) : ''\n                    }\n                </form>\n            </div>\n        </Container>\n    );\n};\n\nexport default Login;","import React, {useState, useEffect} from 'react';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction Profile(props) {\n    const { onEdit, onDeleteUser, user} = props\n    const [profileDetails, setProfileDetails] = useState(user);\n\n    useEffect(() => {\n        setProfileDetails(user);\n    }, [user]);\n\n    const style = {\n        background: 'linear-gradient(45deg, #C8FACC 30%, #FFF6CE 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'black',\n        height: 40,\n        padding: '0 30px',\n        marginTop: '20px',\n      };\n\n      const space = {\n        marginTop: '15px',\n    }\n\n    const selectForm = {\n        padding: '8px 16px',\n        border: '1px solid transparent',\n        borderColor: 'transparent transparent rgba(0, 0, 0, 0.1) transparent',\n        cursor: 'pointer',\n        marginBottom: '1vw'\n    }\n\n    // handle form value changes\n    const handleChangeDetails = (event) => \n        setProfileDetails({\n            ...profileDetails,\n            [event.target.name]: event.target.value,\n        });\n\n\n    // handle pop up to confirm delete\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    if (!user){\n        return 'Loading...'\n    }\n\n    return (\n        <Container>\n            { user && (\n                <div>\n                    <div className='flex-box'>\n                        <h1>Hi there, {user.name}! 💚 </h1>\n                    </div>\n                \n                    <div className='flex-box'>\n                        <p>Edit your account details here.</p>\n                    </div>\n\n                    <div className='flex-box'>\n                        <form onSubmit={onEdit}>\n                            <div  style={space} className=\"form-group\">\n                                <label htmlFor=\"InputName\">Name</label>\n                                <input style={space} onChange={handleChangeDetails} value={profileDetails.name} type=\"text\" className=\"form-control\" id=\"InputName\" name=\"name\" />\n                            </div>\n                            <div style={space} className=\"form-group\">\n                                <label htmlFor=\"InputUsername\">Username</label>\n                                <input style={space} onChange={handleChangeDetails} value={profileDetails.username} type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\" />\n                            </div>\n\n                            <div style={space} className=\"form-group\">\n                                <label htmlFor=\"InputEmail\">Email address</label>\n                                <input style={space} onChange={handleChangeDetails} value={profileDetails.email} type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\n                            </div>\n\n                            <div style={space} className=\"form-group\">\n                                <label htmlFor=\"InputUsername\">Post Code</label>\n                                <input style={space} type=\"text\" className=\"form-control\" id=\"InputPostal\" onChange={handleChangeDetails} value={profileDetails.postal} name=\"postal\" placeholder=\"Change your post code\" />\n                            </div>\n                            <div>\n                                <label style={space} htmlFor=\"InputUsername\">Country</label>\n                                <select style={selectForm} className=\"form-control\" onChange={handleChangeDetails}  value={profileDetails.country} id=\"InputCountry\" name=\"country\">\n                                    <option>Select from dropdown</option>\n                                        <option value=\"AF\">Afghanistan</option>\n                                        <option value=\"AX\">Aland Islands</option>\n                                        <option value=\"AL\">Albania</option>\n                                        <option value=\"DZ\">Algeria</option>\n                                        <option value=\"AS\">American Samoa</option>\n                                        <option value=\"AD\">Andorra</option>\n                                        <option value=\"AO\">Angola</option>\n                                        <option value=\"AI\">Anguilla</option>\n                                        <option value=\"AQ\">Antarctica</option>\n                                        <option value=\"AG\">Antigua and Barbuda</option>\n                                        <option value=\"AR\">Argentina</option>\n                                        <option value=\"AM\">Armenia</option>\n                                        <option value=\"AW\">Aruba</option>\n                                        <option value=\"AU\">Australia</option>\n                                        <option value=\"AT\">Austria</option>\n                                        <option value=\"AZ\">Azerbaijan</option>\n                                        <option value=\"BS\">Bahamas</option>\n                                        <option value=\"BH\">Bahrain</option>\n                                        <option value=\"BD\">Bangladesh</option>\n                                        <option value=\"BB\">Barbados</option>\n                                        <option value=\"BY\">Belarus</option>\n                                        <option value=\"BE\">Belgium</option>\n                                        <option value=\"BZ\">Belize</option>\n                                        <option value=\"BJ\">Benin</option>\n                                        <option value=\"BM\">Bermuda</option>\n                                        <option value=\"BT\">Bhutan</option>\n                                        <option value=\"BO\">Bolivia</option>\n                                        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n                                        <option value=\"BA\">Bosnia and Herzegovina</option>\n                                        <option value=\"BW\">Botswana</option>\n                                        <option value=\"BV\">Bouvet Island</option>\n                                        <option value=\"BR\">Brazil</option>\n                                        <option value=\"IO\">British Indian Ocean Territory</option>\n                                        <option value=\"BN\">Brunei Darussalam</option>\n                                        <option value=\"BG\">Bulgaria</option>\n                                        <option value=\"BF\">Burkina Faso</option>\n                                        <option value=\"BI\">Burundi</option>\n                                        <option value=\"KH\">Cambodia</option>\n                                        <option value=\"CM\">Cameroon</option>\n                                        <option value=\"CA\">Canada</option>\n                                        <option value=\"CV\">Cape Verde</option>\n                                        <option value=\"KY\">Cayman Islands</option>\n                                        <option value=\"CF\">Central African Republic</option>\n                                        <option value=\"TD\">Chad</option>\n                                        <option value=\"CL\">Chile</option>\n                                        <option value=\"CN\">China</option>\n                                        <option value=\"CX\">Christmas Island</option>\n                                        <option value=\"CC\">Cocos (Keeling) Islands</option>\n                                        <option value=\"CO\">Colombia</option>\n                                        <option value=\"KM\">Comoros</option>\n                                        <option value=\"CG\">Congo</option>\n                                        <option value=\"CD\">Congo, Democratic Republic of the Congo</option>\n                                        <option value=\"CK\">Cook Islands</option>\n                                        <option value=\"CR\">Costa Rica</option>\n                                        <option value=\"CI\">Cote D'Ivoire</option>\n                                        <option value=\"HR\">Croatia</option>\n                                        <option value=\"CU\">Cuba</option>\n                                        <option value=\"CW\">Curacao</option>\n                                        <option value=\"CY\">Cyprus</option>\n                                        <option value=\"CZ\">Czech Republic</option>\n                                        <option value=\"DK\">Denmark</option>\n                                        <option value=\"DJ\">Djibouti</option>\n                                        <option value=\"DM\">Dominica</option>\n                                        <option value=\"DO\">Dominican Republic</option>\n                                        <option value=\"EC\">Ecuador</option>\n                                        <option value=\"EG\">Egypt</option>\n                                        <option value=\"SV\">El Salvador</option>\n                                        <option value=\"GQ\">Equatorial Guinea</option>\n                                        <option value=\"ER\">Eritrea</option>\n                                        <option value=\"EE\">Estonia</option>\n                                        <option value=\"ET\">Ethiopia</option>\n                                        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n                                        <option value=\"FO\">Faroe Islands</option>\n                                        <option value=\"FJ\">Fiji</option>\n                                        <option value=\"FI\">Finland</option>\n                                        <option value=\"FR\">France</option>\n                                        <option value=\"GF\">French Guiana</option>\n                                        <option value=\"PF\">French Polynesia</option>\n                                        <option value=\"TF\">French Southern Territories</option>\n                                        <option value=\"GA\">Gabon</option>\n                                        <option value=\"GM\">Gambia</option>\n                                        <option value=\"GE\">Georgia</option>\n                                        <option value=\"DE\">Germany</option>\n                                        <option value=\"GH\">Ghana</option>\n                                        <option value=\"GI\">Gibraltar</option>\n                                        <option value=\"GR\">Greece</option>\n                                        <option value=\"GL\">Greenland</option>\n                                        <option value=\"GD\">Grenada</option>\n                                        <option value=\"GP\">Guadeloupe</option>\n                                        <option value=\"GU\">Guam</option>\n                                        <option value=\"GT\">Guatemala</option>\n                                        <option value=\"GG\">Guernsey</option>\n                                        <option value=\"GN\">Guinea</option>\n                                        <option value=\"GW\">Guinea-Bissau</option>\n                                        <option value=\"GY\">Guyana</option>\n                                        <option value=\"HT\">Haiti</option>\n                                        <option value=\"HM\">Heard Island and Mcdonald Islands</option>\n                                        <option value=\"VA\">Holy See (Vatican City State)</option>\n                                        <option value=\"HN\">Honduras</option>\n                                        <option value=\"HK\">Hong Kong</option>\n                                        <option value=\"HU\">Hungary</option>\n                                        <option value=\"IS\">Iceland</option>\n                                        <option value=\"IN\">India</option>\n                                        <option value=\"ID\">Indonesia</option>\n                                        <option value=\"IR\">Iran, Islamic Republic of</option>\n                                        <option value=\"IQ\">Iraq</option>\n                                        <option value=\"IE\">Ireland</option>\n                                        <option value=\"IM\">Isle of Man</option>\n                                        <option value=\"IL\">Israel</option>\n                                        <option value=\"IT\">Italy</option>\n                                        <option value=\"JM\">Jamaica</option>\n                                        <option value=\"JP\">Japan</option>\n                                        <option value=\"JE\">Jersey</option>\n                                        <option value=\"JO\">Jordan</option>\n                                        <option value=\"KZ\">Kazakhstan</option>\n                                        <option value=\"KE\">Kenya</option>\n                                        <option value=\"KI\">Kiribati</option>\n                                        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n                                        <option value=\"KR\">Korea, Republic of</option>\n                                        <option value=\"XK\">Kosovo</option>\n                                        <option value=\"KW\">Kuwait</option>\n                                        <option value=\"KG\">Kyrgyzstan</option>\n                                        <option value=\"LA\">Lao People's Democratic Republic</option>\n                                        <option value=\"LV\">Latvia</option>\n                                        <option value=\"LB\">Lebanon</option>\n                                        <option value=\"LS\">Lesotho</option>\n                                        <option value=\"LR\">Liberia</option>\n                                        <option value=\"LY\">Libyan Arab Jamahiriya</option>\n                                        <option value=\"LI\">Liechtenstein</option>\n                                        <option value=\"LT\">Lithuania</option>\n                                        <option value=\"LU\">Luxembourg</option>\n                                        <option value=\"MO\">Macao</option>\n                                        <option value=\"MK\">Macedonia, the Former Yugoslav Republic of</option>\n                                        <option value=\"MG\">Madagascar</option>\n                                        <option value=\"MW\">Malawi</option>\n                                        <option value=\"MY\">Malaysia</option>\n                                        <option value=\"MV\">Maldives</option>\n                                        <option value=\"ML\">Mali</option>\n                                        <option value=\"MT\">Malta</option>\n                                        <option value=\"MH\">Marshall Islands</option>\n                                        <option value=\"MQ\">Martinique</option>\n                                        <option value=\"MR\">Mauritania</option>\n                                        <option value=\"MU\">Mauritius</option>\n                                        <option value=\"YT\">Mayotte</option>\n                                        <option value=\"MX\">Mexico</option>\n                                        <option value=\"FM\">Micronesia, Federated States of</option>\n                                        <option value=\"MD\">Moldova, Republic of</option>\n                                        <option value=\"MC\">Monaco</option>\n                                        <option value=\"MN\">Mongolia</option>\n                                        <option value=\"ME\">Montenegro</option>\n                                        <option value=\"MS\">Montserrat</option>\n                                        <option value=\"MA\">Morocco</option>\n                                        <option value=\"MZ\">Mozambique</option>\n                                        <option value=\"MM\">Myanmar</option>\n                                        <option value=\"NA\">Namibia</option>\n                                        <option value=\"NR\">Nauru</option>\n                                        <option value=\"NP\">Nepal</option>\n                                        <option value=\"NL\">Netherlands</option>\n                                        <option value=\"AN\">Netherlands Antilles</option>\n                                        <option value=\"NC\">New Caledonia</option>\n                                        <option value=\"NZ\">New Zealand</option>\n                                        <option value=\"NI\">Nicaragua</option>\n                                        <option value=\"NE\">Niger</option>\n                                        <option value=\"NG\">Nigeria</option>\n                                        <option value=\"NU\">Niue</option>\n                                        <option value=\"NF\">Norfolk Island</option>\n                                        <option value=\"MP\">Northern Mariana Islands</option>\n                                        <option value=\"NO\">Norway</option>\n                                        <option value=\"OM\">Oman</option>\n                                        <option value=\"PK\">Pakistan</option>\n                                        <option value=\"PW\">Palau</option>\n                                        <option value=\"PS\">Palestinian Territory, Occupied</option>\n                                        <option value=\"PA\">Panama</option>\n                                        <option value=\"PG\">Papua New Guinea</option>\n                                        <option value=\"PY\">Paraguay</option>\n                                        <option value=\"PE\">Peru</option>\n                                        <option value=\"PH\">Philippines</option>\n                                        <option value=\"PN\">Pitcairn</option>\n                                        <option value=\"PL\">Poland</option>\n                                        <option value=\"PT\">Portugal</option>\n                                        <option value=\"PR\">Puerto Rico</option>\n                                        <option value=\"QA\">Qatar</option>\n                                        <option value=\"RE\">Reunion</option>\n                                        <option value=\"RO\">Romania</option>\n                                        <option value=\"RU\">Russian Federation</option>\n                                        <option value=\"RW\">Rwanda</option>\n                                        <option value=\"BL\">Saint Barthelemy</option>\n                                        <option value=\"SH\">Saint Helena</option>\n                                        <option value=\"KN\">Saint Kitts and Nevis</option>\n                                        <option value=\"LC\">Saint Lucia</option>\n                                        <option value=\"MF\">Saint Martin</option>\n                                        <option value=\"PM\">Saint Pierre and Miquelon</option>\n                                        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n                                        <option value=\"WS\">Samoa</option>\n                                        <option value=\"SM\">San Marino</option>\n                                        <option value=\"ST\">Sao Tome and Principe</option>\n                                        <option value=\"SA\">Saudi Arabia</option>\n                                        <option value=\"SN\">Senegal</option>\n                                        <option value=\"RS\">Serbia</option>\n                                        <option value=\"CS\">Serbia and Montenegro</option>\n                                        <option value=\"SC\">Seychelles</option>\n                                        <option value=\"SL\">Sierra Leone</option>\n                                        <option value=\"SG\">Singapore</option>\n                                        <option value=\"SX\">Sint Maarten</option>\n                                        <option value=\"SK\">Slovakia</option>\n                                        <option value=\"SI\">Slovenia</option>\n                                        <option value=\"SB\">Solomon Islands</option>\n                                        <option value=\"SO\">Somalia</option>\n                                        <option value=\"ZA\">South Africa</option>\n                                        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n                                        <option value=\"SS\">South Sudan</option>\n                                        <option value=\"ES\">Spain</option>\n                                        <option value=\"LK\">Sri Lanka</option>\n                                        <option value=\"SD\">Sudan</option>\n                                        <option value=\"SR\">Suriname</option>\n                                        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n                                        <option value=\"SZ\">Swaziland</option>\n                                        <option value=\"SE\">Sweden</option>\n                                        <option value=\"CH\">Switzerland</option>\n                                        <option value=\"SY\">Syrian Arab Republic</option>\n                                        <option value=\"TW\">Taiwan, Province of China</option>\n                                        <option value=\"TJ\">Tajikistan</option>\n                                        <option value=\"TZ\">Tanzania, United Republic of</option>\n                                        <option value=\"TH\">Thailand</option>\n                                        <option value=\"TL\">Timor-Leste</option>\n                                        <option value=\"TG\">Togo</option>\n                                        <option value=\"TK\">Tokelau</option>\n                                        <option value=\"TO\">Tonga</option>\n                                        <option value=\"TT\">Trinidad and Tobago</option>\n                                        <option value=\"TN\">Tunisia</option>\n                                        <option value=\"TR\">Turkey</option>\n                                        <option value=\"TM\">Turkmenistan</option>\n                                        <option value=\"TC\">Turks and Caicos Islands</option>\n                                        <option value=\"TV\">Tuvalu</option>\n                                        <option value=\"UG\">Uganda</option>\n                                        <option value=\"UA\">Ukraine</option>\n                                        <option value=\"AE\">United Arab Emirates</option>\n                                        <option value=\"GB\">United Kingdom</option>\n                                        <option value=\"US\">United States</option>\n                                        <option value=\"UM\">United States Minor Outlying Islands</option>\n                                        <option value=\"UY\">Uruguay</option>\n                                        <option value=\"UZ\">Uzbekistan</option>\n                                        <option value=\"VU\">Vanuatu</option>\n                                        <option value=\"VE\">Venezuela</option>\n                                        <option value=\"VN\">Viet Nam</option>\n                                        <option value=\"VG\">Virgin Islands, British</option>\n                                        <option value=\"VI\">Virgin Islands, U.s.</option>\n                                        <option value=\"WF\">Wallis and Futuna</option>\n                                        <option value=\"EH\">Western Sahara</option>\n                                        <option value=\"YE\">Yemen</option>\n                                        <option value=\"ZM\">Zambia</option>\n                                        <option value=\"ZW\">Zimbabwe</option>\n                                </select>\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"InputPassword\">Previous Password</label>\n                                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"InputPassword\">New Password</label>\n                                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" />\n                            </div> */}\n                            <div className='flex-box'>\n                                <Button style={style} type=\"submit\" className=\"btn btn-primary\">Save</Button>\n                            </div>\n                        </form>\n                    </div>\n                    <div className='flex-box padded'>\n                        <Button onClick={handleClickOpen}>Delete account</Button>\n                        <Dialog\n                            open={open}\n                            onClose={handleClose}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">{\"Delete Account\"}</DialogTitle>\n                            <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">\n                                Are you sure you want to delete your account?\n                            </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                            <Button onClick={handleClose}>\n                                Go Back\n                            </Button>\n                            <Button onClick={onDeleteUser} autoFocus>\n                                Delete Account\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n            </div>\n            )}\n        </Container>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n// Material UI\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nfunction RemindersToDo(props) {\n    const {reminders, onWatering, classes} = props\n    const options = {month: 'short', day: 'numeric'};\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const style = {\n        background: 'linear-gradient(45deg, #C8FACC 30%, #FFF6CE 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'black',\n        height: 40,\n        padding: '0 30px',\n      };\n\n     \n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    \n    const incompleteReminders = reminders.filter((reminder) => !reminder.complete)\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, reminders.length - page * rowsPerPage);\n\n    return (\n        <>\n            <div className=\"flex-box\">\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell>Plant</TableCell>\n                            <TableCell>Task</TableCell>\n                            <TableCell align=\"right\">Date Due</TableCell>\n                            {/* <TableCell align=\"right\">Status</TableCell> */}\n                            <TableCell align=\"right\">Change Status</TableCell>\n                            {/* Edit reminder frequency? */}\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {incompleteReminders\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((reminder, i) => {\n                            return (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <Link to={`/plants/${reminder.plant._id}`}>\n                                            <Button>{reminder.plant.name}</Button>\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        Water Me!\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        {new Intl.DateTimeFormat('en-GB', options).format(reminder.nextWatering)}\n                                    </TableCell>\n                                    {/* <TableCell align=\"right\">\n                                        To Do\n                                    </TableCell> */}\n                                    <TableCell align=\"right\">\n                                        <Button style={style} onClick={() => onWatering(reminder._id)}>Done</Button>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                        {emptyRows > 0 && (\n                            <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                            <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={incompleteReminders.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default RemindersToDo;","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport RemindersToDo from './reminders/RemindersToDo';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\n\n// Animation\nimport LottieControl from '../animation/LottieControl.jsx'\nimport plantJson from '../animation/hangingPlant.json';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n        fontSize: '25px',\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: 'theme.palette.text.secondary',\n    },\n    paperGreen: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'theme.palette.text.secondary',\n        backgroundColor: '#C8FACC',\n        height: 100,\n    },\n    paperGreenWithoutHeight: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'theme.palette.text.secondary',\n        backgroundColor: '#C8FACC',\n    },\n    paperBlue: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'theme.palette.text.secondary',\n        backgroundColor: '#D1F2FF',\n        height: 100,\n    },\n    paperBlueWithoutHeight: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'theme.palette.text.secondary',\n        backgroundColor: '#D1F2FF',\n        minHeight: '50.046772684752106vh',\n    },\n    paperYellow: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'theme.palette.text.secondary',\n        backgroundColor: '#FFF6CE',\n        height: 100,\n    },\n    paperYellowWithoutHeight: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'theme.palette.text.secondary',\n        backgroundColor: '#FFF6CE',\n        minHeight: '50.046772684752106vh',\n    },\n    paperRed: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'theme.palette.text.secondary',\n        backgroundColor: '#FFE6D9',\n        height: 100,\n    },\n    gallery: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n        overflow: 'hidden',\n        backgroundColor: '#C8FACC',\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        objectFit: 'cover',\n    }\n  }));\n\nfunction Dashboard(props) {\n    const {user, plants, reminders, onWatering, weather, temper} = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n        weather()\n    }, [])\n\n    const plantTotal = () => {\n        let arrPlantsDead = plants.map((plant, i) => {\n                return(\n                \n                    <div key={i}>\n                        <p>{plant}</p>\n                    </div>\n                )  \n          })\n          \n          return <p>{arrPlantsDead.length}</p>\n      }\n\n    const plantsDead = () => {\n        let arrPlantsDead = plants.filter((plant, i) => {\n            return plant.isAlive === false;  \n        })\n        return <p>{arrPlantsDead.length}</p>\n    }\n\n    const plantsAlive = () => {\n        let arrPlantsAlive = plants.filter((plant, i) => {\n            return plant.isAlive === true;  \n        })\n        return <p>{arrPlantsAlive.length}</p>\n    }\n\n      const completedReminders = () => {\n        let completedReminders = reminders.filter((reminders, i) => {\n            return reminders.complete === true;\n        })\n        return <p>{completedReminders.length}</p>\n      }\n  \n    return (\n        <Container>\n            <div className={classes.root}>\n                <div className=\"space-between\">\n                    <h1 className={classes.title}>✨ Dashboard ✨</h1>\n                    <Link to='/plants/create'><Button>Add Plant</Button></Link>\n                </div>\n                <Grid container spacing={3}>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paperGreen}>{<h3>Total Plants: {plantTotal()}</h3>}</Paper>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paperBlue}>{<h3>Alive Plants: {plantsAlive()}</h3>}</Paper>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paperYellow}><h3>Waters Logged: {completedReminders()}</h3></Paper>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paperRed}><h3>Deceased Plants: {plantsDead()}</h3></Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Paper className={classes.paperYellowWithoutHeight}>\n                            <h4>Next Reminders</h4>\n                            <RemindersToDo classes={classes} reminders={reminders} onWatering={onWatering}/> \n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Paper className={classes.paperBlueWithoutHeight}>\n                        <LottieControl animation={plantJson} width='61%'/>\n                            <h3>Current Temperature ☀️</h3>\n                            <h3>{ temper } °C</h3>\n                            <div className='padded'>\n                                <Link to={`/profile/${user._id}`}><Button>Change Location</Button></Link>\n                            </div>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n\n                        <Paper className={classes.paperGreenWithoutHeight}>\n                            <h4>Plant Gallery</h4>\n                            <div className={classes.gallery}>\n                            <ImageList className={classes.gallery} cols={3}>\n                                {plants.map((plant) => (\n                                <ImageListItem className={classes.image} key={plant.img} cols={plant.cols || 1}>\n                                    <img src={plant.photo} alt={plant.title} />\n                                </ImageListItem>\n                                ))}\n                                \n                            </ImageList>\n                            </div>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n};\n\nexport default Dashboard;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useTheme } from '@material-ui/core/styles';\n\nfunction MyPlants(props) {\n    const {plants, onSearch} = props\n    const theme = useTheme();\n\n    const useStyles = makeStyles({\n        root: {\n            maxWidth: '100%',\n            flexGrow: 1,\n        },\n        title: {\n            fontSize: '25px',\n        },\n        search: {\n            minWidth: '300px',\n            maxWidth: '500px',\n        },\n        card: {\n            margin: 10, \n        },\n        media: {\n            height: 140,\n            width: 200,\n        },\n    });\n    const classes = useStyles();\n\n    const live = (v) => {\n        if (v.isAlive === true){\n            return <h2>Alive</h2>\n        }\n        else {\n            return <h2>Deceased</h2>\n        }\n    };\n\n    return (\n        <Container>\n            <div className={classes.root}>\n\n            <div className=\"space-between\">\n                    <div className='flex-start'>\n                        <h1>🪴 Plants 🪴</h1>\n                        <div className='padded'>\n                            <Link to='/plants/create'><Button>Add Plant</Button></Link>\n                        </div>\n                    </div>\n                    <div className=\"flex-end\">\n                        <input onChange={onSearch} type=\"text\" placeholder=\"Search..\" className={classes.search}/>\n                    </div>\n                </div>\n\n                <div className=\"flex-box\">\n                    {plants\n                    .map((plant, i) => {\n                        return (\n                            <div key={i}>\n                                <Card className={classes.card}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image={plant.photo}\n                                            title={plant.name} />\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">{plant.name}</Typography>\n                                        </CardContent>\n                                        <CardContent className='isAlive-margin'>{live(plant)}</CardContent>\n                                    </CardActionArea>\n                                    <CardActions>\n                                        <Link to={`/plants/${plant._id}`}>\n                                            <Button size=\"small\">View</Button>\n                                        </Link>\n                                        <Link to={`/plants/${plant._id}/edit`}>\n                                            <Button size=\"small\">Edit</Button>\n                                        </Link>\n                                    </CardActions>\n                                </Card>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            </div>\n        </ Container>\n    );\n};\n\nexport default MyPlants;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction AddPlant(props) {\n    const {onAddPlant} = props\n\n    const style = {\n        background: 'linear-gradient(45deg, #C8FACC 30%, #FFF6CE 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'black',\n        height: 40,\n        padding: '0 30px',\n        marginTop: '20px',\n      };\n\n      const space = {\n          marginTop: '15px',\n          \n      }\n\n    return (\n        <Container>\n            <>\n                <div className='space-between'>\n                    <Link to='/plants'><Button>Go Back</Button></Link>\n                </div>\n\n                <div className='flex-box'>\n                    <h1>Add Plant</h1>\n                </div>\n\n                <div className='flex-box'>\n                    <form  onSubmit={onAddPlant} action=\"/plants/create\" encType=\"multipart/form-data\">\n                        <div style={space} className=\"form-group\">\n                            <label style={space}  htmlFor=\"InputName\">Name</label>\n                            <input style={space}  type=\"text\" name=\"name\" placeholder=\"e.g. Freddie\" maxlength=\"40\" required/>\n                        </div>\n                        <div style={space} className=\"form-group\">\n                            <label style={space}  htmlFor=\"InputUsername\">Description</label>\n                            <input style={space} type=\"text\" className=\"form-control\"  placeholder=\"e.g. my beloved cheeseplant\" maxlength=\"80\" name=\"description\" />\n                        </div>\n                        <div style={space} className=\"form-group\">\n                            <label style={space} htmlFor=\"InputEmail\">How often the plant needs watering</label>\n                            <input style={space} type=\"number\" name=\"waterFreq\" placeholder=\"Number of days\" min=\"0\" max=\"31\" required/>\n                        </div>\n                        {/* <div className=\"form-group\">\n                            <label htmlFor=\"InputPassword\">Fertilizer Frequency</label>\n                            <input name=\"fertiliseFreq\" type=\"number\" />\n                        </div> */}\n                        <div style={space} className=\"form-group\">\n                            <label style={space} htmlFor=\"InputUsername\">Plant Photo</label>\n                            <input style={space} type=\"file\" name=\"photo\" accept=\"image/png, image/jpg\" required />\n                        </div>\n                        <div className='flex-box'>\n                            <Button style={style} type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        </Container>\n    );\n};\n\nexport default AddPlant;","import React  from 'react';\nimport { Link } from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction PlantDetails(props) {\n    const {reminders, plants} = props;\n    let plantId = props.match.params.plantId\n    let plant = plants.find((p) => p._id === plantId)\n    const options = {month: 'short', day: 'numeric'};\n\n    if (!plant) {\n        return 'Loading . . .'\n    } \n\n    const live = () => {\n        if (plant.isAlive === true){\n           return <p>Alive</p>\n         }\n         else{\n            return <p>Deceased</p>\n         }\n    }\n    \n    let nextReminderDate = undefined\n    if (reminders) {\n        let nextWateringReminder = reminders.find((r) => r.plant._id === plant._id && !r.complete)\n        console.log('nextWateringReminder', nextWateringReminder)\n        if (nextWateringReminder) {\n            nextReminderDate = nextWateringReminder.nextWatering\n        }\n    }\n\n    return (\n        <Container>\n            <> \n                <div className='space-between'>\n                    <Link to='/plants'><Button>Go Back</Button></Link>\n                    <h3>Next Reminder: {new Intl.DateTimeFormat('en-GB', options).format(nextReminderDate)}</h3>\n                </div>\n\n                <div className='flex-box'>\n                        <h1>{plant.name}</h1>\n                </div>\n\n                <div className='flex-box'>\n                    {live()}\n                </div>\n\n                <div className='flex-box'>\n                    <p>I need watering every {plant.waterFreq} days.</p>\n                </div>\n\n                <div className='flex-box'>\n                    <Link to={`/plants/${plant._id}/edit`}>\n                        <Button>Edit</Button>\n                    </Link>\n                </div>\n                <div className='flex-box padded'>\n                    <img src={plant.photo} alt='{plant.name}' height='500'/>\n                </div>\n                <div className='flex-box'>\n                    <p>{plant.description}</p>\n                </div>\n            </>          \n        </ Container>\n    );\n};\n\nexport default PlantDetails;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction EditPlant(props) {\n    const {onEdit, plants} = props\n    let plantId = props.match.params.plantId\n    let plant = plants.find((p) => p._id === plantId)\n    const [plantDetail, updatePlantDetail] = useState(plant)\n\n\n    useEffect(() => {\n        updatePlantDetail(plant);\n    }, [plant]);\n\n    const style = {\n        background: 'linear-gradient(45deg, #C8FACC 30%, #FFF6CE 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'black',\n        height: 40,\n        padding: '0 30px',\n        marginTop: '20px',\n      };\n\n      const space = {\n        marginTop: '15px',\n    }\n\n    const handleChangeDetails = (event) => \n    updatePlantDetail({\n            ...plantDetail,\n            [event.target.name]: event.target.value,\n        });\n\n    if (!plantDetail){\n        return 'Loading...'\n    }\n\n    return (\n        <Container>\n            <>\n                <div className='space-between'>\n                    <Link to='/plants'><Button>Go Back</Button></Link>\n                </div>\n\n                <div className=\"flex-box\">\n                    <h1>Edit Plant</h1>\n                </div>\n\n                <div className=\"flex-box\">\n                    <form onSubmit={onEdit}>\n                        <input style={space} type=\"hidden\" name=\"plantId\" value={plantDetail._id}/>\n                        <input style={space} onChange={handleChangeDetails} value={plantDetail.name}  name=\"name\"  type=\"text\" maxlength = \"40\"  placeholder=\"Enter name\"/>\n                        <input style={space} onChange={handleChangeDetails} value={plantDetail.description} name=\"description\"  type=\"text\" maxlength = \"80\" placeholder=\"Enter description\"/>\n                        <input style={space}  onChange={handleChangeDetails} value={plantDetail.waterFreq}  name=\"waterFreq\"  type=\"number\"  placeholder=\"Set frequency for reminders (in days)\"/>\n                        {/* <input onChange={handleFertiliseFreqChange} value={plantDetail.fertiliseFreq}  name=\"fertiliseFreq\"  type=\"number\"  placeholder=\"Enter name\"/> */}\n                        {/* <input onChange={handleIsAliveChange} value={plantDetail.isAlive}  name=\"isAlive\"  type=\"text\"  placeholder=\"Enter name\"/> */}\n\n                        <label for=\"isAlive\">Plant Health Status </label>\n                        <select style={space} onChange={handleChangeDetails} id=\"plantDetail.isAlive\" name=\"isAlive\"> \n                            <option  value=\"true\" selected>Alive</option>\n                            <option  value=\"false\">Dead</option>\n                        </select>\n                        \n                        <div className='flex-box'>\n                            <Button style={style} type=\"submit\">Submit</Button>\n                        </div>\n\n                    </form>\n                </div>\n                <div className='flex-box padded'>\n                    <Link>\n                        <Button onClick={() => {props.onDelete(plant._id)}}>Delete</Button>\n                    </Link>\n                </div>\n            </>\n        </Container>\n    );\n};\n\nexport default EditPlant;","import React from 'react';\nimport RemindersToDo from './RemindersToDo';\nimport {Link} from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n// Animation\nimport LottieControl from '../../animation/LottieControl.jsx'\nimport bigPlant from '../../animation/bigPlant.json';\n\nconst useStyles = makeStyles({\n    title: {\n        fontSize: '25px',\n    },\n    subtitle: {\n        fontSize: '22px',\n    },\n    table: {\n      minWidth: 500,\n    },\n});\n\nfunction Reminders(props) {\n    const {reminders, onWatering} = props\n    const classes = useStyles();\n    const options = {month: 'short', day: 'numeric'};\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const completeReminders = reminders.filter((reminder) => reminder.complete)\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, reminders.length - page * rowsPerPage);\n\n    return (\n        <Container>\n            <div>\n                <h1 className={classes.title}>🔔 Reminders 🔔 </h1>\n            </div>\n            <Grid spacing={2}>\n                <Grid>\n                    <h2 className={classes.subtitle}>To Do</h2>\n                        <RemindersToDo classes={classes} reminders={reminders} onWatering={onWatering} />\n                    <h2 className={classes.subtitle}>Done</h2>\n                        <div className=\"flex-box\">\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                <TableRow>\n                                    <TableCell>Plant</TableCell>\n                                    <TableCell>Task</TableCell>\n                                    <TableCell align=\"right\">Date Due</TableCell>\n                                    {/* <TableCell align=\"right\">Status</TableCell> */}\n                                    <TableCell align=\"right\">Date Done 🙌</TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                {completeReminders\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map((reminder, i) => {\n                                    return (\n                                        <TableRow key={i}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <Link to={`/plants/${reminder.plant._id}`}>\n                                                    <Button>{reminder.plant.name}</Button>\n                                                </Link>\n                                            </TableCell>\n                                            <TableCell>\n                                                Water Me!\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {new Intl.DateTimeFormat('en-GB', options).format(reminder.nextWatering)}\n                                            </TableCell>\n                                            {/* <TableCell align=\"right\">\n                                                Done\n                                            </TableCell> */}\n                                            <TableCell align=\"right\">\n                                                {new Intl.DateTimeFormat('en-GB', options).format(reminder.wateredAt)}<p></p>\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                                {emptyRows > 0 && (\n                                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                    </TableRow>\n                                )}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={completeReminders.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                        />\n                    </div>\n                </Grid>\n                <Grid className='padded'>\n                    <LottieControl animation={bigPlant} width='40%'/>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Reminders;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\n// Animation\nimport LottieControl from '../animation/LottieControl.jsx'\nimport errorJson from '../animation/error.json';\n\nfunction Page404() {\n    return (\n        <Container>\n            <LottieControl animation={errorJson} width='55%'/>\n            <div className=\"flex-box\">\n                <Link to={'/dashboard'}>\n                    <Button>Back to safety</Button>\n                </Link>\n            </div>\n        </ Container>\n    )\n}\n\nexport default Page404;","export default {\n\tAPI_URL: process.env.REACT_APP_SERVER_URL\n}","// Setup\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\n\n// Components\nimport Nav from './components/Nav';\nimport LandingPage from './components/LandingPage';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/auth/Profile';\nimport Dashboard from './components/Dashboard';\nimport MyPlants from './components/plants/MyPlants';\nimport AddPlant from './components/plants/AddPlant';\nimport PlantDetails from './components/plants/PlantDetails';\nimport EditPlant from './components/plants/EditPlant';\nimport Reminders from './components/reminders/Reminders';\nimport Page404 from './components/Page404';\nimport config from './config'\n\n// Material UI \nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        main: '#C8FACC',\n        dark: '#00534A',\n      },\n      secondary: {\n        main: '#D1F2FF',\n        dark: '#05297A',\n      },\n      contrastThreshold: 3,\n      tonalOffset: 0.2,\n    },\n  });\n\n// It begins!\nfunction App(props) {\n\n    const [user, setUser] = useState(null);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [plants, updatePlants] = useState([]);\n    const [filteredPlants, updateFilteredPlants] = useState([]);\n    const [reminders, setReminders] = useState([]);\n    const [fetchingUser, updateFetchingUser] = useState(true);\n    const [signupError, updateSignupError] = useState(null)\n    const [loginError, updateLoginError] = useState(null)\n    const [temper, updateTempr] = useState(null)\n\n    useEffect(() => {\n        fetchUser();\n        if (isLoggedIn) {\n            fetchPlants();\n            fetchFilterPlants();\n        }\n    }, [isLoggedIn]); \n\n    useEffect(() => {\n        if (isLoggedIn) {\n            fetchReminders();\n        }\n    }, [plants, filteredPlants]); \n\n    // useEffect(() =>{\n    //     if(!user){\n    //         props.history.push('/');\n    //     } \n    // }, [user])\n\n\n//----------------------------------------------------------\n//------------------------   WEATHER API   ----------------\n//----------------------------------------------------------\n    const handleWeather = async () => {\n        try{\n            let response = await axios.get(`${config.API_URL}/api/dashboard/test`, {withCredentials: true})  \n            console.log('temperatura', response.data.data[0].temp)\n            let temp = response.data.data[0].temp\n            updateTempr(temp)\n        }\n        catch{\n            console.log('error weather')\n        }\n    }\n    \n\n//----------------------------------------------------------\n//------------------------   FETCH USER     ----------------\n//----------------------------------------------------------\n    const fetchUser = async () => {\n        try {\n            let response = await axios.get(`${config.API_URL}/api/user`, {withCredentials: true});\n            setUser(response.data);\n            setIsLoggedIn(true);\n            updateFetchingUser(false)\n        }\n        catch (err) {\n            console.log('User not logged in', err);\n            setUser(null);\n            setIsLoggedIn(false);\n            updateFetchingUser(false)\n            props.history.push('/')\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   FETCH PLANTS   ----------------\n//----------------------------------------------------------\n    const fetchPlants = async () => {\n        try {\n            let response = await axios.get(`${config.API_URL}/api/plants`, {withCredentials: true});\n            updatePlants(response.data);\n        }\n        catch (err) {\n            console.log('plants fetch failed', err)\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   FETCH FILTER PLANTS -----------\n//----------------------------------------------------------\n    const fetchFilterPlants = async () => {\n        try {\n            let response = await axios.get(`${config.API_URL}/api/plants`, {withCredentials: true});\n            updateFilteredPlants(response.data);\n        }\n        catch (err) {\n            console.log('plants fetch failed', err)\n        };\n    };\n\n//----------------------------------------------------------\n//--------------------   FETCH ALL REMINDERS----------------\n//----------------------------------------------------------\n    // handle date type -> DB returns a string\n    const handleDatesInReminders = (reminders) => {\n        reminders.map((reminder) => {\n            if (reminder.nextWatering) {\n                reminder.nextWatering = Date.parse(reminder.nextWatering)\n            }\n            if (reminder.wateredAt) {\n                reminder.wateredAt = Date.parse(reminder.wateredAt)\n            }\n        })\n        return reminders\n    };\n\n    const fetchReminders = async () => {\n        try {\n            let response = await axios.get(`${config.API_URL}/api/reminders`, {withCredentials: true})\n           \n            setReminders(handleDatesInReminders(response.data))\n        }\n        catch (err) {\n            console.log('reminders fetch failed', err)\n        }\n    }\n\n//----------------------------------------------------------\n//------------------------   SIGN UP        ----------------\n//----------------------------------------------------------\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        const {name, username, email, password, country, postal} = event.target;\n        let newUser = {\n            name: name.value,\n            username: username.value,\n            email: email.value,\n            password: password.value,\n            country: country.value,\n            postal: postal.value,\n        };\n        try {\n            await axios.post(`${config.API_URL}/api/signup`, newUser, {withCredentials: true});\n            updateSignupError(null);\n            props.history.push('/login');\n        }\n        catch (err) {\n            console.log('Signup failed', err);\n            updateSignupError(err.response.data.errorMessage)\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   LOGN IN        ----------------\n//----------------------------------------------------------\n    const handleLogIn = async (event) => {\n        event.preventDefault();\n        const {username, password} = event.target;\n        let myUser = {\n            username: username.value,\n            password: password.value,\n        };\n        try {\n            let response = await axios.post(`${config.API_URL}/api/login`, myUser, {withCredentials: true});\n            setUser(response.data);\n            console.log('login function', response.data)\n            setIsLoggedIn(true);\n            updateLoginError(null)\n            props.history.push('/dashboard');\n        }\n        catch (err) {\n            console.log('Login failed', err);\n            console.log('login error', err.response.data.error)\n            updateLoginError(err.response.data.error)\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   LOGOUT         ----------------\n//----------------------------------------------------------\n    const handleLogOut = async () => {\n        try {\n            await axios.post(`${config.API_URL}/api/logout`, {}, {withCredentials: true});\n            setUser(null);\n            setIsLoggedIn(false);\n            console.log('Logout succesful')\n          \n        }\n        catch (err) {\n            console.log('Logout failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//----------------------   EDIT USER PROFILE       ---------\n//----------------------------------------------------------\nconst handleEditProfile = (event) => {\n    event.preventDefault()\n    let name = event.target.name.value;\n    let username = event.target.username.value;\n    let email = event.target.email.value;\n    let country = event.target.country.value;\n    let postal = event.target.postal.value; \n\n    axios.patch(`${config.API_URL}/api/profile`, {name, username, email, postal, country}, {withCredentials: true})\n    .then((response) => {\n        setUser(response.data);\n        props.history.push('/dashboard');\n    })\n    .catch((err) => {\n        console.log('handling edit profile error', err)\n    })\n};\n//----------------------------------------------------------\n//------------------------   DELETE USER    ----------------\n//----------------------------------------------------------\n    const handleDeleteUser = async (user) => {\n        try {\n            await axios.delete(`${config.API_URL}/api/profile`, {withCredentials: true});\n            console.log('in the try', user)\n            setUser(null);\n            setIsLoggedIn(false);\n            props.history.push('/');\n        }\n        catch (err) {\n            console.log('Deleting account failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   ADD A NEW PLANT ---------------\n//----------------------------------------------------------\n    const handleAddPlant = async (event) => {\n        event.preventDefault();\n\n        let formData = new FormData()\n        formData.append('imageUrl', event.target.photo.files[0])\n\n        let imgResponse = await axios.post(`${config.API_URL}/api/upload`, formData)\n\n        const { name, description, waterFreq} = event.target;\n        let newPlant = {\n            name: name.value,\n            description: description.value,\n            waterFreq: waterFreq.value,\n            photo: imgResponse.data.photo\n        }\n        try {\n            let response = await axios.post(`${config.API_URL}/api/plants/create`, newPlant , {withCredentials: true});\n            newPlant = response.data\n            console.log(plants, 'in add plant handler')\n            updatePlants([newPlant, ...plants])\n            updateFilteredPlants([newPlant, ...filteredPlants])\n            props.history.push('/plants')\n        }\n        catch (err) {\n            console.log('create plant failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------  DELETE A PLANT  ----------------\n//----------------------------------------------------------\n    const handleDeletePlant = async (plantId) => {\n        try {\n            await axios.delete(`${config.API_URL}/api/plants/${plantId}`, {withCredentials: true})\n            let filteredPlants = plants.filter((plant) => {\n                return plant._id !== plantId\n            })\n            updatePlants(filteredPlants);\n            updateFilteredPlants(filteredPlants);\n            props.history.push('/plants');\n        }\n        catch(err){\n            console.log('delete plant failed', err)\n        }\n    }\n\n//----------------------------------------------------------\n//------------------------ EDIT A PLANT     ----------------\n//----------------------------------------------------------\n    const handleEditPlant = (event) => {\n        event.preventDefault()\n        console.log('event', event)\n        let plantId = event.target.plantId.value;\n        let name = event.target.name.value;\n        let description = event.target.description.value;\n        let waterFreq = event.target.waterFreq.value;\n        let isAlive = event.target.isAlive.value\n\n        axios.patch(`${config.API_URL}/api/plants/${plantId}/edit`, {name, description, waterFreq, isAlive}, {withCredentials: true})\n        .then((response) => {\n            let newPlant = response.data\n            console.log(\"newplant\", newPlant)\n            let p = plants.filter((p) => p._id !== newPlant._id)\n            updatePlants([newPlant, ...p])\n\n            let fp = filteredPlants.filter((p) => p._id !== newPlant._id)\n            updateFilteredPlants([newPlant, ...fp])\n            props.history.push('/plants')\n        })\n        .catch((err) => {\n            console.log('handling plant details error', err)\n        })\n    }\n\n//----------------------------------------------------------\n//------------------   SEARCH FOR PLANT NAME ---------------\n//----------------------------------------------------------\n    const handleSearch = (event) => {\n        let searchPlant = event.target.value\n        \n        let filteredPlants = plants.filter((plant) => {\n            return(\n                plant.name.toLowerCase().includes(searchPlant.toLowerCase()) \n            ) \n        })\n\n        updateFilteredPlants(filteredPlants)\n    }\n\n//----------------------------------------------------------\n//----------------------   UPDATE REMINDER STATUS  ---------\n//----------------------------------------------------------\nconst handleReminder = async (reminderId) => {\n    try {\n        await axios.patch(`${config.API_URL}/api/reminders/${reminderId}`, {}, {withCredentials: true});\n        let response = await axios.get(`${config.API_URL}/api/reminders`, {withCredentials: true})\n        setReminders(handleDatesInReminders(response.data))\n    }\n    catch (err) {\n        console.log('handling the reminder failed', err);\n    };\n}\n\n//------------------------   FETCH USER        ----------------\nif (fetchingUser) {\n    return <p>Loading . . . </p>\n}\n\n//----------------------------------------------------------\n//------------------------   ROUTES         ----------------\n//----------------------------------------------------------\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n            {/* Navbar */}\n            <Nav user={user} onLogOut={handleLogOut} isLoggedIn={isLoggedIn} />\n            <div className='container'>\n            {/* Pages */}\n            <Switch>\n                {/* Public Pages */}\n                <Route exact path={'/'} render={(routeProps) => {\n                    return <LandingPage user={user} isLoggedIn={isLoggedIn} {...routeProps} />\n                }} />\n                <Route path={'/signup'} render={(routeProps) => {\n                    return <Signup myError={signupError} onSignUp={handleSignUp} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route path={'/login'} render={(routeProps) => {\n                    return <Login myError={loginError} onLogIn={handleLogIn} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                {/* Protected Pages */}\n                <Route path={'/profile'} render={(routeProps) => {\n                    return <Profile user={user} onEdit={handleEditProfile} onDeleteUser={handleDeleteUser} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route exact path={'/dashboard'} render={(routeProps) => {\n                    return <Dashboard user={user} plants={plants} reminders={reminders} onWatering={handleReminder} weather={handleWeather} temper={temper} {...routeProps}/>\n                }} />\n                <Route exact path={'/plants'} render={(routeProps) => {\n                    return <MyPlants onSearch={handleSearch} plants={filteredPlants} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route path={'/plants/create'} render={(routeProps) => {\n                    return <AddPlant onAddPlant={handleAddPlant} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route exact path={'/plants/:plantId'} render={(routeProps) => {\n                    return <PlantDetails plants={plants} reminders={reminders} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route path={'/plants/:plantId/edit'} render={(routeProps) => {\n                    return <EditPlant plants={plants} onEdit={handleEditPlant} onDelete={handleDeletePlant} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route exact path={'/reminders'} render={(routeProps) => {\n                    return <Reminders onWatering={handleReminder} reminders={reminders} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                 <Route exact path={'/dashboard/test'} render={(routeProps) => {\n                    return <Dashboard user={user} plants={plants} reminders={reminders} weather={handleWeather}  isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                {/* Page Not Found */}\n                <Route component={Page404} />\n            </Switch>\n            </div>\n            </ThemeProvider>\n        </div>\n    );\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}