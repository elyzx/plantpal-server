{"version":3,"sources":["components/LandingPage.jsx","components/Signup.jsx","components/Login.jsx","components/Profile.jsx","components/RemindersToDo.jsx","components/Dashboard.jsx","components/MyPlants.jsx","components/AddPlant.jsx","components/PlantDetails.jsx","components/EditPlant.jsx","components/Reminders.jsx","components/Page404.jsx","App.js","index.js","components/Nav.jsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","LandingPage","props","classes","Container","Grid","container","item","xs","sm","Paper","className","Signup","onSignUp","isLoggedIn","to","onSubmit","htmlFor","type","id","name","Button","Login","onLogIn","console","log","Profile","onEdit","onDeleteUser","user","useState","profileDetails","setProfileDetails","useEffect","fetchProfileDetails","a","axios","get","withCredentials","response","data","username","event","onChange","newName","target","value","newUsername","newEmail","email","onClick","RemindersToDo","reminders","onWatering","options","month","day","TableContainer","component","Table","table","TableHead","TableRow","TableCell","align","TableBody","filter","reminder","complete","map","i","scope","plant","Intl","DateTimeFormat","format","nextWatering","_id","Dashboard","plants","useTheme","arrPlantsDead","length","plantTotal","arrPlantsAlive","isAlive","plantsAlive","plantsDead","completedReminders","MyPlants","onSearch","maxWidth","search","card","margin","media","height","width","placeholder","Card","CardActionArea","CardMedia","image","photo","title","CardContent","Typography","gutterBottom","variant","v","CardActions","size","AddPlant","onAddPlant","action","encType","required","accept","PlantDetails","plantDetail","updatePlantDetail","fetchPlantDetails","plantId","match","params","nextWateringReminder","find","r","waterFreq","src","alt","onDelete","EditPlant","newDescription","description","newWaterfreq","for","newIsAlive","minWidth","Reminders","wateredAt","Page404","createTheme","primary","main","green","blue","contrastThreshold","tonalOffset","withRouter","setUser","setIsLoggedIn","updatePlants","filteredPlants","updateFilteredPlants","setReminders","fetchingUser","updateFetchingUser","fetchUser","fetchPlants","fetchFilterPlants","fetchReminders","handleWeather","history","push","handleSignUp","preventDefault","password","newUser","post","handleLogIn","myUser","handleLogOut","handleDeleteUser","delete","handleAddPlant","formData","FormData","append","files","imgResponse","fertiliseFreq","newPlant","handleDeletePlant","handleEditPlant","patch","updatePlant","singleplant","handleSearch","searchPlant","toLowerCase","includes","handleReminder","reminderId","handleEditProfile","profile","updateProfile","singleUser","ThemeProvider","Nav","onLogOut","exact","path","render","routeProps","weather","ReactDOM","StrictMode","document","getElementById","menuButton","marginRight","drawerClasses","list","React","anchorEl","setAnchorEl","drawerOpen","toggleDrawer","open","Boolean","drawerIsOpen","iOS","process","browser","test","navigator","userAgent","handleClose","onLogoutAndClose","position","edge","RouterLink","disableBackdropTransition","disableDiscovery","anchor","onClose","onOpen","button","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin"],"mappings":"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","file":"static/js/main.18ff8e0d.chunk.js","sourcesContent":["import React from 'react';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\nfunction LandingPage(props) {\n    const classes = useStyles();\n\n    return (\n        <Container>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>\n                        <h1>Your plant's hydration pal</h1>\n                        <p>Never forget to water your plant again </p>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>xs=12 sm=6</Paper>\n                </Grid>\n            </Grid>\n        </ Container>\n    );\n};\n\nexport default LandingPage;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction Signup(props) {\n    const {onSignUp, isLoggedIn} = props\n    if (isLoggedIn) {\n        return <Redirect to={'/dashboard'} />\n    }\n    return (\n        <Container>\n            <div className='flex-box'> \n                <h1>Create an account</h1>\n            </div>\n            <div className='flex-box'> \n                <form onSubmit={onSignUp}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputName\">Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"InputName\" name=\"name\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputUsername\">Username</label>\n                        <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputEmail\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputPassword\">Password</label>\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" />\n                    </div>\n                    <Button type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n                </form>\n            </div>\n        </ Container>\n    );\n};\n\nexport default Signup;\n\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction Login(props) {\n    const {onLogIn, isLoggedIn} = props\n\n    if (isLoggedIn) {\n        console.log(\"user is logged in; go back\")\n        return <Redirect to={'/dashboard'} />\n    }\n    \n    return (\n        <Container>\n            <div className='flex-box'>\n                <h1>Log in to PlantPal</h1>\n            </div>\n            <div className='flex-box'>\n                <form onSubmit={onLogIn}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputUsername\">Username</label>\n                        <input name=\"username\" type=\"text\" className=\"form-control\" id=\"username\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"InputPassword\">Password</label>\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" />\n                    </div>\n                    <Button type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n                </form>\n            </div>\n        </ Container>\n    );\n};\n\nexport default Login;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction Profile(props) {\n    const { onEdit, onDeleteUser, user} = props\n    const [profileDetails, setProfileDetails] = useState([]);\n\n    useEffect(() => {\n        fetchProfileDetails();\n    }, []);\n    \n    const fetchProfileDetails = async () => {\n        try {\n            let response = await axios.get(`http://localhost:5005/api/profile`, {withCredentials: true});\n            setProfileDetails(response.data);\n\n        }\n        catch (err) {\n            console.log('Profile details fetch failed', err)\n        }\n    };\n\n    const handleNameChange = (event) => {\n        let newName = event.target.value;\n        setProfileDetails({...profileDetails, name: newName});\n    }\n\n    const handleUsernameChange = (event) => {\n        let newUsername = event.target.value;\n        setProfileDetails({...profileDetails, username: newUsername})\n    }\n\n    const handleEmailChange = (event) => {\n        let newEmail = event.target.value;\n        setProfileDetails({...profileDetails, email: newEmail})\n    }\n\n    return (\n        <Container>\n            <div>\n                { user && (\n                    <div className='flex-box'>\n                        <h1>Hi there, {user.username}!</h1>\n                    </div>\n                )}\n                \n                <div className='flex-box'>\n                    <p>Edit your profile details using the form below.</p>\n                </div>\n\n                <div className='flex-box'>\n                    <form onSubmit={(event) => {onEdit(event, profileDetails)}}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputName\">Name</label>\n                            <input onChange={handleNameChange} value={profileDetails.name} type=\"text\" className=\"form-control\" id=\"InputName\" name=\"name\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputUsername\">Username</label>\n                            <input onChange={handleUsernameChange} value={profileDetails.username} type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputEmail\">Email address</label>\n                            <input onChange={handleEmailChange} value={profileDetails.email} type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputPassword\">Previous Password</label>\n                            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputPassword\">New Password</label>\n                            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" />\n                        </div>\n                        <Button type=\"submit\" className=\"btn btn-primary\">Save</Button>\n                    </form>\n                </div>\n                <div className='flex-box'>\n                    <Button onClick={onDeleteUser}>Delete account</Button>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Profile;","import React from 'react';\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nfunction RemindersToDo(props) {\n    const {reminders, onWatering, classes} = props\n    console.log('onwatering', onWatering)\n    const options = {month: 'short', day: 'numeric'};\n    return (\n        <>\n            <div className=\"flex-box\">\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell>Plant</TableCell>\n                            <TableCell>Task</TableCell>\n                            <TableCell align=\"right\">Date Due</TableCell>\n                            <TableCell align=\"right\">Status</TableCell>\n                            <TableCell align=\"right\">Change Status</TableCell>\n                            {/* Edit reminder frequency? */}\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {reminders\n                            .filter((reminder) => !reminder.complete)\n                            .map((reminder, i) => {\n                            return (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {reminder.plant.name}\n                                        {/* could we link to the plant details page? */}\n                                    </TableCell >\n                                    <TableCell>\n                                        Water Me!\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        {new Intl.DateTimeFormat('en-GB', options).format(reminders.nextWatering)}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        To Do\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Button onClick={() => onWatering(reminder._id)}>Done</Button>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    )\n}\n\nexport default RemindersToDo;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport RemindersToDo from './RemindersToDo';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n// Theme\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\nfunction Dashboard(props) {\n    const {plants, reminders, onWatering} = props;\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // const plantAlive = () => {\n    //   let arrPlantsAlive = plants.map((plant, i) => {\n    //         return(\n    //             <div key={i}>\n    //                 <p>{plant}</p>\n    //             </div>\n    //         )\n    //     })\n    //     return <p>{arrPlantsAlive.length}</p>\n    // }\n\n    const plantTotal = () => {\n        let arrPlantsDead = plants.map((plant, i) => {\n                return(\n                \n                    <div key={i}>\n                        <p>{plant}</p>\n                    </div>\n                )  \n          })\n          \n          return <p>{arrPlantsDead.length}</p>\n      }\n\n    const plantsDead = () => {\n        let arrPlantsDead = plants.filter((plant, i) => {\n            return plant.isAlive === false;  \n        })\n        return <p>{arrPlantsDead.length}</p>\n    }\n\n    const plantsAlive = () => {\n        let arrPlantsAlive = plants.filter((plant, i) => {\n            return plant.isAlive === true;  \n        })\n        return <p>{arrPlantsAlive.length}</p>\n    }\n\n      const completedReminders = () => {\n        let completedReminders = reminders.filter((reminders, i) => {\n            return reminders.complete === true;\n        })\n        return <p>{completedReminders.length}</p>\n      }\n  \n    return (\n        <Container>\n            <div className={classes.root}>\n                <div className=\"space-between\">\n                    <h1>Dashboard</h1>\n                    <Link to='/plants/create'><Button color='secondary'>Add Plant</Button></Link>\n                </div>\n                <Grid container spacing={3}>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paper}>{<h3>Total Plants: {plantTotal()}</h3>}</Paper>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paper}>{<h3>Alive Plants: {plantsAlive()}</h3>}</Paper>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paper}><h3>Deceased Plants: {plantsDead()}</h3></Paper>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Paper className={classes.paper}><h3>Plant Waterings: {completedReminders()}</h3></Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Paper className={classes.paper}>\n                            Next Reminders\n                            <RemindersToDo classes={classes} reminders={reminders} onWatering={onWatering}/> \n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Paper className={classes.paper}>Weather Forecast</Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>Plant Gallery</Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </ Container>\n    );\n};\n\nexport default Dashboard;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useTheme } from '@material-ui/core/styles';\n\nfunction MyPlants(props) {\n    const {plants, onSearch} = props\n    const theme = useTheme();\n\n    const useStyles = makeStyles({\n        root: {\n            maxWidth: '100%',\n        },\n        search: {\n            maxWidth: '350px',\n        },\n        card: {\n            margin: 10, \n        },\n        media: {\n            height: 140,\n            width: 200,\n        },\n    });\n    const classes = useStyles();\n\n    const live = (v) => {\n        if (v.isAlive === true){\n            return <h2>Alive</h2>\n        }\n        else {\n            return <h2>Not Alive</h2>\n        }\n    };\n\n    return (\n        <Container>\n            <div className={classes.root}>\n\n                <div className=\"space-between\">\n                    <div className='flex-start'>\n                        <h1>My Plants</h1>\n                        <div className='padded'>\n                            <Link to='/plants/create'><Button color='secondary'>Add Plant</Button></Link>\n                        </div>\n                    </div>\n                    <div className=\"flex-end\">\n                        <input onChange={onSearch} type=\"text\" placeholder=\"Search..\" className={classes.search}/>\n                    </div>\n                </div>\n\n                <div className=\"flex-box\">\n                    {plants\n                    .map((plant, i) => {\n                        return (\n                            <div key={i}>\n                                <Card className={classes.card}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image={plant.photo}\n                                            title={plant.name} />\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">{plant.name}</Typography>\n                                        </CardContent>\n                                        <CardContent className='isAlive-margin'>{live(plant)}</CardContent>\n                                    </CardActionArea>\n                                    <CardActions>\n                                        <Link to={`/plants/${plant._id}`}>\n                                            <Button size=\"small\" color=\"primary\">Details</Button>\n                                        </Link>\n                                    </CardActions>\n                                </Card>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            </div>\n        </ Container>\n    );\n};\n\nexport default MyPlants;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction AddPlant(props) {\n    const {onAddPlant} = props\n    return (\n        <Container>\n            <>\n                <div className='space-between'>\n                    <Link to='/plants'><Button color='secondary'>Go Back</Button></Link>\n                </div>\n\n                <div className='flex-box'>\n                    <h1>Add Plant</h1>\n                </div>\n\n                <div className='flex-box'>\n                    <form onSubmit={onAddPlant} action=\"/plants/create\" encType=\"multipart/form-data\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputName\">Name</label>\n                            <input type=\"text\"  name=\"name\" placeholder=\"e.g. Freddie\" required/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputUsername\">Description</label>\n                            <input type=\"text\" className=\"form-control\"  placeholder=\"e.g. my beloved cheeseplant\" name=\"description\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputEmail\">Reminder Frequency</label>\n                            <input type=\"number\" name=\"waterFreq\" placeholder=\"number of days\" required/>\n                        </div>\n                        {/* <div className=\"form-group\">\n                            <label htmlFor=\"InputPassword\">Fertilizer Frequency</label>\n                            <input name=\"fertiliseFreq\" type=\"number\" />\n                        </div> */}\n                        <div className=\"form-group\">\n                            <label htmlFor=\"InputUsername\">Plant Photo</label>\n                            <input type=\"file\" name=\"photo\" accept=\"image/png, image/jpg\" required />\n                        </div>\n                        <Button type=\"submit\" className=\"btn btn-primary\">Submit</Button>\n                    </form>\n                </div>\n            </>\n        </ Container>\n    );\n};\n\nexport default AddPlant;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction PlantDetails(props) {\n    const {reminders} = props;\n    const [plantDetail, updatePlantDetail] = useState({});\n    const options = {month: 'short', day: 'numeric'};\n\n    useEffect(() => {\n        fetchPlantDetails();\n    }, []);\n\n    const fetchPlantDetails = async () => {\n        try {\n            let plantId = props.match.params.plantId\n            let response = await axios.get(`http://localhost:5005/api/plants/${plantId}`, {withCredentials: true});\n            updatePlantDetail(response.data);\n        }\n        catch (err) {\n            console.log('Plant details fetch failed', err);\n        };\n    };\n\n    if (!plantDetail) {\n        return 'page is Loading'\n    } \n\n    const live = () => {\n        if (plantDetail.isAlive === true){\n           return <p>Alive</p>\n         }\n         else{\n            return <p>Deceased</p>\n         }\n    }\n    \n    let nextWatering = \"\"\n    if (reminders) {\n        let nextWateringReminder = reminders.find((r) => r.plant._id == plantDetail._id && !r.complete)\n        if (nextWateringReminder) {\n            nextWatering = nextWateringReminder.nextWatering\n        }\n    }\n\n    return (\n        <Container>\n            <> \n                <div className='space-between'>\n                    <Link to='/plants'><Button color='secondary'>Go Back</Button></Link>\n                    <h3>Next Reminder: {new Intl.DateTimeFormat('en-GB', options).format(reminders.nextWatering)}</h3>\n                </div>\n\n                <div className='flex-box'>\n                    <h1>{plantDetail.name}</h1>\n                </div>\n\n                <div className='flex-box'>\n                    {live()}\n                </div>\n\n                <div className='flex-box'>\n                    <p>I need watering every {plantDetail.waterFreq} days.</p>\n                </div>\n\n                <div className='flex-box padded'>\n                    <img src={plantDetail.photo} alt='{plantDetail.name}' height='500'/>\n                </div>\n\n                <div className='flex-box'>\n                    <Link to={`/plants/${plantDetail._id}/edit`}>\n                        <Button>Edit</Button>\n                    </Link>\n                    <Link>\n                        <Button onClick={() => {props.onDelete(plantDetail._id)}}>Delete</Button>\n                    </Link>\n                </div>\n            </>          \n        </ Container>\n    );\n};\n\nexport default PlantDetails;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nfunction EditPlant(props) {\n    const {onEdit} = props\n    const [plantDetail, updatePlantDetail] = useState([])\n\n    useEffect(async () => {\n        try {\n            let plantId = props.match.params.plantId\n            let response = await axios.get(`http://localhost:5005/api/plants/${plantId}`, {withCredentials: true})\n            updatePlantDetail(response.data)\n        }\n        catch(err){\n            console.log('edit plant fetch failed2', err)\n        }\n    }, [])\n\n    const handlePhotoChange = (event) => {\n        let newPhoto = event.target.value\n        updatePlantDetail({...plantDetail, name: newPhoto})\n    }\n\n    const handleNameChange = (event) => {\n        let newName = event.target.value\n        updatePlantDetail({...plantDetail, name: newName})\n    }\n    const handleDescriptionChange = (event) => {\n        let newDescription = event.target.value\n        updatePlantDetail({...plantDetail, description: newDescription})\n    }\n    const handleWaterFreqChange = (event) => {\n        let newWaterfreq = event.target.value\n        updatePlantDetail({...plantDetail, waterFreq: newWaterfreq})\n    }\n    const handleFertiliseFreqChange = (event) => {\n        let newFertiliseFreq = event.target.value\n        updatePlantDetail({...plantDetail, fertiliseFreq: newFertiliseFreq})\n    }\n    const handleIsAliveChange = (event) => {\n        let newIsAlive = event.target.value\n        updatePlantDetail({...plantDetail, isAlive: newIsAlive})\n    }\n\n    if(!plantDetail){\n        return 'Loading...'\n    }\n\n    return (\n        <Container>\n            <>\n                <div className='space-between'>\n                    <Link to='/plants'><Button color='secondary'>Go Back</Button></Link>\n                </div>\n\n                <div className=\"flex-box\">\n                    <h1>Edit Plant</h1>\n                </div>\n\n                <div className=\"flex-box\">\n                    <form onSubmit={ (event) => {onEdit(event, plantDetail ) } } >\n                        <input onChange={handleNameChange} value={plantDetail.name}  name=\"name\"  type=\"text\"  placeholder=\"Enter name\"/>\n                        <input onChange={handleDescriptionChange} value={plantDetail.description} name=\"description\"  type=\"text\"  placeholder=\"Enter description\"/>\n                        <input onChange={handleWaterFreqChange} value={plantDetail.waterFreq}  name=\"waterFreq\"  type=\"number\"  placeholder=\"Set frequency for reminders (in days)\"/>\n                        {/* <input onChange={handleFertiliseFreqChange} value={plantDetail.fertiliseFreq}  name=\"fertiliseFreq\"  type=\"number\"  placeholder=\"Enter name\"/> */}\n                        {/* <input onChange={handleIsAliveChange} value={plantDetail.isAlive}  name=\"isAlive\"  type=\"text\"  placeholder=\"Enter name\"/> */}\n\n                        <label for=\"isAlive\">Choose the status:</label>\n                        <select onChange={handleIsAliveChange} id=\"plantDetail.isAlive\" name=\"isAlive\">\n                            <option value=\"\">Is it alive or dead?</option>   \n                            <option  value=\"true\">Alive</option>\n                            <option  value=\"false\">Dead</option>\n                        </select>\n\n                        <Button type=\"submit\">Submit</Button>\n                    </form>\n                </div>\n            </>\n        </Container>\n    );\n};\n\nexport default EditPlant;","import React from 'react';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport RemindersToDo from './RemindersToDo';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 500,\n    },\n});\n\nfunction Reminders(props) {\n    const {reminders, onWatering} = props\n    const classes = useStyles();\n    const options = {month: 'short', day: 'numeric'};\n\n    return (\n        <Container>\n            <div>\n                <h1>Reminders</h1>\n            </div>\n            <h2>To Do</h2>\n                <RemindersToDo classes={classes} reminders={reminders} onWatering={onWatering} />\n            <h2>Done</h2>\n                <div className=\"flex-box\">\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell>Plant</TableCell>\n                            <TableCell>Task</TableCell>\n                            <TableCell align=\"right\">Date Due</TableCell>\n                            <TableCell align=\"right\">Status</TableCell>\n                            <TableCell align=\"right\">Date Changed</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {reminders\n                            .filter((reminder) => reminder.complete)\n                            .map((reminder, i) => {\n                            return (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {reminder.plant.name}\n                                        {/* could we link to the plant details page? */}\n                                    </TableCell >\n                                    <TableCell>\n                                        Water Me!\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        {new Intl.DateTimeFormat('en-GB', options).format(reminders.nextWatering)}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        Done\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        {new Intl.DateTimeFormat('en-GB', options).format(reminders.wateredAt)}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </Container>\n    )\n}\n\nexport default Reminders;","import React from 'react'\n\n// Material UI\nimport Container from '@material-ui/core/Container';\n\nfunction Page404() {\n    return (\n        <Container>\n            404 Error\n        </ Container>\n    )\n}\n\nexport default Page404;","// Setup\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\n\n// Components\nimport Nav from './components/Nav';\n// import Footer from './components/Footer';\nimport LandingPage from './components/LandingPage';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport Profile from './components/Profile';\nimport Dashboard from './components/Dashboard';\nimport MyPlants from './components/MyPlants';\nimport AddPlant from './components/AddPlant';\nimport PlantDetails from './components/PlantDetails';\nimport EditPlant from './components/EditPlant';\nimport Reminders from './components/Reminders';\nimport Page404 from './components/Page404';\n\n// Material UI theme\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { green, blue } from '@material-ui/core/colors';\n// import { makeStyles } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        // light: will be calculated from palette.primary.main,\n        main: green[500],\n        // dark: will be calculated from palette.primary.main,\n        // contrastText: will be calculated to contrast with palette.primary.main\n      },\n      secondary: {\n        main: blue[500],\n        // dark: will be calculated from palette.secondary.main,\n      },\n      // Used by `getContrastText()` to maximize the contrast between\n      // the background and the text.\n      contrastThreshold: 3,\n      // Used by the functions below to shift a color's luminance by approximately\n      // two indexes within its tonal palette.\n      // E.g., shift from Red 500 to Red 300 or Red 700.\n      tonalOffset: 0.2,\n    },\n  });\n\n\n// It begins!\nfunction App(props) {\n\n    const [user, setUser] = useState(null);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [plants, updatePlants] = useState([]);\n    const [filteredPlants, updateFilteredPlants] = useState([]);\n    const [reminders, setReminders] = useState([]);\n    const [fetchingUser, updateFetchingUser] = useState(true);\n    //const [weather, updateWeather] = useState([]);\n\n    useEffect(() => {\n        fetchUser();\n        if (isLoggedIn) {\n            fetchPlants();\n            fetchFilterPlants();\n        }\n    }, [isLoggedIn]); \n\n    useEffect(() => {\n        fetchReminders();\n    }, [plants, filteredPlants]); \n\n    // useEffect(() =>{\n    //     if(!user){\n    //         props.history.push('/');\n    //     } \n    // }, [user])\n\n\n//----------------------------------------------------------\n//------------------------   WEATHER API   ----------------\n//----------------------------------------------------------\n\nconst handleWeather = async () => {\n    try{\n        let response = await axios.get('http://localhost:5005/api/dashboard/test', {withCredentials: true})\n        console.log('weather data', response.data)\n    }\n    catch{\n        console.log('error weather')\n    }\n}\n    \n\n//----------------------------------------------------------\n//------------------------   FETCH USER     ----------------\n//----------------------------------------------------------\n    const fetchUser = async () => {\n        try {\n            let response = await axios.get('http://localhost:5005/api/user', {withCredentials: true});\n            console.log('fetch user', response.data)\n            setUser(response.data);\n            // updateSpecificUser(response.data);\n            setIsLoggedIn(true);\n            updateFetchingUser(false)\n        }\n        catch (err) {\n            console.log('User not logged in', err);\n            setUser(null);\n            // updateSpecificUser(null)\n            setIsLoggedIn(false);\n            updateFetchingUser(false)\n            props.history.push('/')\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   FETCH PLANTS   ----------------\n//----------------------------------------------------------\n    const fetchPlants = async () => {\n        try {\n            let response = await axios.get(`http://localhost:5005/api/plants`, {withCredentials: true});\n            updatePlants(response.data);\n        }\n        catch (err) {\n            console.log('plants fetch failed', err)\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   FETCH FILTER PLANTS -----------\n//----------------------------------------------------------\n    const fetchFilterPlants = async () => {\n        try {\n            let response = await axios.get(`http://localhost:5005/api/plants`, {withCredentials: true});\n            updateFilteredPlants(response.data);\n        }\n        catch (err) {\n            console.log('plants fetch failed', err)\n        };\n    };\n\n//----------------------------------------------------------\n//--------------------   FETCH ALL REMINDERS----------------\n//----------------------------------------------------------\n    const fetchReminders = async () => {\n        try {\n            let response = await axios.get(`http://localhost:5005/api/reminders`, {withCredentials: true})\n            console.log('in the fetchreminders function', response.data)\n            setReminders(response.data)\n        }\n        catch (err) {\n            console.log('reminders fetch failed', err)\n        }\n    }\n\n//----------------------------------------------------------\n//------------------------   SIGN UP        ----------------\n//----------------------------------------------------------\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        const {name, username, email, password} = event.target;\n        let newUser = {\n            name: name.value,\n            username: username.value,\n            email: email.value,\n            password: password.value,\n        };\n        try {\n            await axios.post('http://localhost:5005/api/signup', newUser, {withCredentials: true});\n            props.history.push('/login');\n        }\n        catch (err) {\n            console.log('Signup failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   LOGN IN        ----------------\n//----------------------------------------------------------\n    const handleLogIn = async (event) => {\n        event.preventDefault();\n        const {username, password} = event.target;\n        let myUser = {\n            username: username.value,\n            password: password.value,\n        };\n        try {\n            let response = await axios.post('http://localhost:5005/api/login', myUser, {withCredentials: true});\n            setUser(response.data);\n            console.log('login function', response.data)\n            setIsLoggedIn(true);\n            props.history.push('/dashboard');\n        }\n        catch (err) {\n            console.log('Login failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   LOGOUT         ----------------\n//----------------------------------------------------------\n    const handleLogOut = async () => {\n        try {\n            await axios.post(`http://localhost:5005/api/logout`, {}, {withCredentials: true});\n            setUser(null);\n            setIsLoggedIn(false);\n            console.log('sign out succesfull')\n          \n        }\n        catch (err) {\n            console.log('Logout failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   DELETE USER    ----------------\n//----------------------------------------------------------\n    const handleDeleteUser = async (user) => {\n        try {\n            await axios.delete('http://localhost:5005/api/profile', {withCredentials: true});\n            setUser(null);\n            setIsLoggedIn(false);\n            props.history.push('/');\n        }\n        catch (err) {\n            console.log('Deleting account failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------   ADD A NEW PLANT ---------------\n//----------------------------------------------------------\n    const handleAddPlant = async (event) => {\n        event.preventDefault();\n\n        let formData = new FormData()\n        formData.append('imageUrl', event.target.photo.files[0])\n\n        let imgResponse = await axios.post('http://localhost:5005/api/upload', formData)\n\n        const { name, description, waterFreq, fertiliseFreq} = event.target;\n        let newPlant = {\n            name: name.value,\n            description: description.value,\n            waterFreq: waterFreq.value,\n            // fertiliseFreq: fertiliseFreq.value,\n            photo: imgResponse.data.photo\n        }\n        try {\n            let response = await axios.post('http://localhost:5005/api/plants/create', newPlant , {withCredentials: true});\n            newPlant = response.data\n            console.log(plants, 'in add plant handler')\n            updatePlants([newPlant, ...plants])\n            updateFilteredPlants([newPlant, ...filteredPlants])\n            props.history.push('/plants')\n        }\n        catch (err) {\n            console.log('create plant failed', err);\n        };\n    };\n\n//----------------------------------------------------------\n//------------------------  DELETE A PLANT  ----------------\n//----------------------------------------------------------\n    const handleDeletePlant = async (plantId) => {\n        try {\n            await axios.delete(`http://localhost:5005/api/plants/${plantId}`, {withCredentials: true})\n            let filteredPlants = plants.filter((plant) => {\n                return plant._id !== plantId\n            })\n            updatePlants(filteredPlants);\n            updateFilteredPlants(filteredPlants);\n            props.history.push('/plants');\n        }\n        catch(err){\n            console.log('delete plant failed', err)\n        }\n    }\n\n//----------------------------------------------------------\n//------------------------ EDIT A PLANT     ----------------\n//----------------------------------------------------------\n    const handleEditPlant = async (event, plant) => {\n        event.preventDefault()\n        try {\n            await axios.patch(`http://localhost:5005/api/plants/${plant._id}/edit`, plant, {withCredentials: true})\n            let updatePlant = plants.map((singleplant) => {\n                if (singleplant._id === plant._id){\n                    singleplant.photo = plant.photo\n                    singleplant.name = plant.name\n                    singleplant.description = plant.description\n                    singleplant.waterFreq = plant.waterFreq\n                    // singleplant.fertiliseFreq = plant.fertiliseFreq\n                    singleplant.isAlive = plant.isAlive\n                }\n                return singleplant\n            })\n            updatePlants(updatePlant);\n            updateFilteredPlants(updatePlant);\n            props.history.push('/plants');\n            \n        }\n        catch(err){\n            console.log('edit plant fetch failed', err)\n        }\n    }\n\n//----------------------------------------------------------\n//------------------   SEARCH FOR PLANT NAME ---------------\n//----------------------------------------------------------\n    const handleSearch = (event) => {\n        let searchPlant = event.target.value\n        \n        let filteredPlants = plants.filter((plant) => {\n            return(\n                plant.name.toLowerCase().includes(searchPlant.toLowerCase()) \n            ) \n        })\n\n        updateFilteredPlants(filteredPlants)\n    }\n\n//----------------------------------------------------------\n//----------------------   UPDATE REMINDER STATUS  ---------\n//----------------------------------------------------------\nconst handleReminder = async (reminderId) => {\n    try {\n        await axios.patch(`http://localhost:5005/api/reminders/${reminderId}`, {}, {withCredentials: true});\n        let response = await axios.get(`http://localhost:5005/api/reminders`, {withCredentials: true})\n        setReminders(response.data)\n    }\n    catch (err) {\n        console.log('handling the reminder failed', err);\n    };\n}\n\n//----------------------------------------------------------\n//----------------------   EDIT USER PROFILE       ---------\n//----------------------------------------------------------\nconst handleEditProfile = async (event, profile) => {\n    event.preventDefault()\n    try {\n        await axios.patch(`http://localhost:5005/api/profile/${profile._id}`, profile, {withCredentials: true})\n        let updateProfile = user.map((singleUser) => {\n            if (singleUser._id === profile._id) {\n                singleUser.name = profile.name\n                singleUser.username = profile.username\n            }\n            return singleUser\n        })\n        setUser(updateProfile);\n        props.history.push('/');\n    }\n    catch(err){\n        console.log('handling edit profile error', err)\n    }\n}\n\n\n//------------------------   FETCH USER        ----------------\nif (fetchingUser) {\n    return <p>Loading . . . </p>\n}\n\n//----------------------------------------------------------\n//------------------------   ROUTES         ----------------\n//----------------------------------------------------------\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n            {/* Navbar */}\n            <Nav user={user} onLogOut={handleLogOut} isLoggedIn={isLoggedIn} />\n            <div className='container'>\n            {/* Pages */}\n            <Switch>\n                {/* Public Pages */}\n                <Route exact path={'/'} render={(routeProps) => {\n                    return <LandingPage user={user} isLoggedIn={isLoggedIn} {...routeProps} />\n                }} />\n                <Route path={'/signup'} render={(routeProps) => {\n                    return <Signup onSignUp={handleSignUp} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route path={'/login'} render={(routeProps) => {\n                    return <Login onLogIn={handleLogIn} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                {/* Protected Pages */}\n                <Route path={'/profile'} render={(routeProps) => {\n                    return <Profile user={user} setUser={setUser} onEdit={handleEditProfile} onDeleteUser={handleDeleteUser} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route exact path={'/dashboard'} render={(routeProps) => {\n                    return <Dashboard user={user} plants={plants} reminders={reminders} onWatering={handleReminder} {...routeProps}/>\n                }} />\n                <Route exact path={'/plants'} render={(routeProps) => {\n                    return <MyPlants onSearch={handleSearch} plants={filteredPlants} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route path={'/plants/create'} render={(routeProps) => {\n                    return <AddPlant onAddPlant={handleAddPlant} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route exact path={'/plants/:plantId'} render={(routeProps) => {\n                    return <PlantDetails onDelete={handleDeletePlant} reminders={reminders} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route path={'/plants/:plantId/edit'} render={(routeProps) => {\n                    return <EditPlant onEdit={handleEditPlant} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                <Route exact path={'/reminders'} render={(routeProps) => {\n                    return <Reminders onWatering={handleReminder} reminders={reminders} isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                 <Route exact path={'/dashboard/test'} render={(routeProps) => {\n                    return <Dashboard user={user} plants={plants} reminders={reminders} weather={handleWeather}  isLoggedIn={isLoggedIn} {...routeProps}/>\n                }} />\n                {/* Page Not Found */}\n                <Route component={Page404} />\n            </Switch>\n            </div>\n            {/* <Footer /> */}\n            </ThemeProvider>\n        </div>\n    );\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useEffect } from 'react';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Link from '@material-ui/core/Link';\nimport {Link as RouterLink} from  'react-router-dom';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\n// Theme\nimport { useTheme } from '@material-ui/core/styles';\n\n// Icons\nimport LocalFloristSharpIcon from '@material-ui/icons/LocalFloristSharp';\nimport FormatListBulletedSharpIcon from '@material-ui/icons/FormatListBulletedSharp';\nimport BarChartSharpIcon from '@material-ui/icons/BarChartSharp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n}));\n\n\nfunction Nav(props) {\n    const {onLogOut, isLoggedIn, user} = props\n    const theme = useTheme();\n    const classes = useStyles();\n    const drawerClasses = makeStyles({\n        list: {\n            width: 250,\n        },\n    })\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [drawerOpen, toggleDrawer] = React.useState(false);\n    const open = Boolean(anchorEl);\n    const drawerIsOpen = Boolean(drawerOpen);\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  \n    useEffect(() => {\n        return () => {\n            toggleDrawer(false)\n        }\n    }, [])\n\n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const onLogoutAndClose = () => {\n        handleClose()\n        onLogOut()\n    }\n    \n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    { user && (\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                            onClick={() => isLoggedIn && toggleDrawer(true)}>\n                            <MenuIcon />\n                        </IconButton>\n                    )}\n                <Typography variant=\"h6\" className={classes.title}>\n                    <Link component={RouterLink} to='/' color='inherit'>PlantPal</Link>\n                </Typography>\n\n                {\n                    user && (\n                        <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n                            anchor={'left'}\n                            open={drawerIsOpen}\n                            onClose={() => toggleDrawer(false)}\n                            onOpen={() => toggleDrawer(true)}>\n                            <div className={drawerClasses.list}>\n                                <List></List>\n                                <List>\n                                    <ListItem button component={RouterLink} to='/'>\n                                        <ListItemIcon><HomeIcon color=\"secondary\"/> </ListItemIcon>\n                                        <ListItemText>PlantPal</ListItemText>\n                                    </ListItem>\n                                </List>\n                                <List>\n                                    <Divider />\n                                </List>\n                                <List>\n                                    <ListItem button component={RouterLink} to={`/profile/${user._id}`}>\n                                    <ListItemIcon><AccountCircle color=\"secondary\"/> </ListItemIcon>\n                                    <ListItemText> {user.username} </ListItemText>\n                                    </ListItem>\n                                </List>\n                                <List>\n                                    <Divider />\n                                </List>\n                                <List>\n                                    <ListItem button component={RouterLink} to='/dashboard'>\n                                        <ListItemIcon><BarChartSharpIcon color=\"primary\" /> </ListItemIcon>\n                                        <ListItemText>Dashboard</ListItemText>\n                                    </ListItem>\n                                    <ListItem button component={RouterLink} to='/plants'>\n                                        <ListItemIcon><LocalFloristSharpIcon color=\"primary\"/> </ListItemIcon>\n                                        <ListItemText>Plants</ListItemText>\n                                    </ListItem>\n                                    <ListItem button component={RouterLink} to='/reminders'>\n                                        <ListItemIcon><FormatListBulletedSharpIcon color=\"primary\" /> </ListItemIcon>\n                                        <ListItemText>Reminders</ListItemText>\n                                    </ListItem>\n                                </List>\n                                <List>\n                                    <Divider />\n                                </List>\n                                <List>\n                                    <ListItem button onClick={onLogoutAndClose}>\n                                        <ListItemIcon><ExitToAppIcon color=\"secondary\"/> </ListItemIcon>\n                                        <ListItemText>Sign out</ListItemText>\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </SwipeableDrawer>\n                    )\n                }\n                {isLoggedIn ? (\n                    <div>\n                    <IconButton\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\"\n                    >\n                        <AccountCircle />\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                    {\n                        user && (\n                            <MenuItem button component={RouterLink} to={`/profile/${user._id}`} onClick={handleClose}>Profile</MenuItem>\n                        )\n                    }\n                        <MenuItem onClick={onLogoutAndClose}>Sign out</MenuItem>\n                    </Menu>\n                    </div>\n                )\n                : ( \n                    <div>\n                        <Link button component={RouterLink} to='/login' color='inherit'><Button>Login</Button></Link>\n                        <Link button component={RouterLink} to='/signup' color='inherit'><Button>Signup</Button></Link>\n                    </div>\n                )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Nav;"],"sourceRoot":""}